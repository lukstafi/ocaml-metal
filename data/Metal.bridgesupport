<?xml version='1.0'?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version='1.0'>
<struct name='MTLAccelerationStructureInstanceDescriptor' type64='{MTLAccelerationStructureInstanceDescriptor=&quot;transformationMatrix&quot;{_MTLPackedFloat4x3}&quot;options&quot;I&quot;mask&quot;I&quot;intersectionFunctionTableOffset&quot;I&quot;accelerationStructureIndex&quot;I}'/>
<struct name='MTLAccelerationStructureMotionInstanceDescriptor' type64='{MTLAccelerationStructureMotionInstanceDescriptor=&quot;options&quot;I&quot;mask&quot;I&quot;intersectionFunctionTableOffset&quot;I&quot;accelerationStructureIndex&quot;I&quot;userID&quot;I&quot;motionTransformsStartIndex&quot;I&quot;motionTransformsCount&quot;I&quot;motionStartBorderMode&quot;I&quot;motionEndBorderMode&quot;I&quot;motionStartTime&quot;f&quot;motionEndTime&quot;f}'/>
<struct name='MTLAccelerationStructureSizes' type64='{MTLAccelerationStructureSizes=&quot;accelerationStructureSize&quot;Q&quot;buildScratchBufferSize&quot;Q&quot;refitScratchBufferSize&quot;Q}'/>
<struct name='MTLAccelerationStructureUserIDInstanceDescriptor' type64='{MTLAccelerationStructureUserIDInstanceDescriptor=&quot;transformationMatrix&quot;{_MTLPackedFloat4x3}&quot;options&quot;I&quot;mask&quot;I&quot;intersectionFunctionTableOffset&quot;I&quot;accelerationStructureIndex&quot;I&quot;userID&quot;I}'/>
<struct name='MTLAxisAlignedBoundingBox' type64='{_MTLAxisAlignedBoundingBox=&quot;min&quot;{_MTLPackedFloat3}&quot;max&quot;{_MTLPackedFloat3}}'/>
<struct name='MTLClearColor' type64='{MTLClearColor=&quot;red&quot;d&quot;green&quot;d&quot;blue&quot;d&quot;alpha&quot;d}'/>
<struct name='MTLComponentTransform' type64='{MTLComponentTransform=&quot;scale&quot;{_MTLPackedFloat3}&quot;shear&quot;{_MTLPackedFloat3}&quot;pivot&quot;{_MTLPackedFloat3}&quot;rotation&quot;{MTLPackedFloatQuaternion}&quot;translation&quot;{_MTLPackedFloat3}}'/>
<struct name='MTLCoordinate2D' type64='{MTLSamplePosition=&quot;x&quot;f&quot;y&quot;f}'/>
<struct name='MTLCounterResultStageUtilization' type64='{MTLCounterResultStageUtilization=&quot;totalCycles&quot;Q&quot;vertexCycles&quot;Q&quot;tessellationCycles&quot;Q&quot;postTessellationVertexCycles&quot;Q&quot;fragmentCycles&quot;Q&quot;renderTargetCycles&quot;Q}'/>
<struct name='MTLCounterResultStatistic' type64='{MTLCounterResultStatistic=&quot;tessellationInputPatches&quot;Q&quot;vertexInvocations&quot;Q&quot;postTessellationVertexInvocations&quot;Q&quot;clipperInvocations&quot;Q&quot;clipperPrimitivesOut&quot;Q&quot;fragmentInvocations&quot;Q&quot;fragmentsPassed&quot;Q&quot;computeKernelInvocations&quot;Q}'/>
<struct name='MTLCounterResultTimestamp' type64='{MTLCounterResultTimestamp=&quot;timestamp&quot;Q}'/>
<struct name='MTLDispatchThreadgroupsIndirectArguments' type64='{MTLDispatchThreadgroupsIndirectArguments=&quot;threadgroupsPerGrid&quot;[3I]}'/>
<struct name='MTLDrawIndexedPrimitivesIndirectArguments' type64='{MTLDrawIndexedPrimitivesIndirectArguments=&quot;indexCount&quot;I&quot;instanceCount&quot;I&quot;indexStart&quot;I&quot;baseVertex&quot;i&quot;baseInstance&quot;I}'/>
<struct name='MTLDrawPatchIndirectArguments' type64='{MTLDrawPatchIndirectArguments=&quot;patchCount&quot;I&quot;instanceCount&quot;I&quot;patchStart&quot;I&quot;baseInstance&quot;I}'/>
<struct name='MTLDrawPrimitivesIndirectArguments' type64='{MTLDrawPrimitivesIndirectArguments=&quot;vertexCount&quot;I&quot;instanceCount&quot;I&quot;vertexStart&quot;I&quot;baseInstance&quot;I}'/>
<struct name='MTLIndirectAccelerationStructureInstanceDescriptor' type64='{MTLIndirectAccelerationStructureInstanceDescriptor=&quot;transformationMatrix&quot;{_MTLPackedFloat4x3}&quot;options&quot;I&quot;mask&quot;I&quot;intersectionFunctionTableOffset&quot;I&quot;userID&quot;I&quot;accelerationStructureID&quot;{MTLResourceID}}'/>
<struct name='MTLIndirectAccelerationStructureMotionInstanceDescriptor' type64='{MTLIndirectAccelerationStructureMotionInstanceDescriptor=&quot;options&quot;I&quot;mask&quot;I&quot;intersectionFunctionTableOffset&quot;I&quot;userID&quot;I&quot;accelerationStructureID&quot;{MTLResourceID}&quot;motionTransformsStartIndex&quot;I&quot;motionTransformsCount&quot;I&quot;motionStartBorderMode&quot;I&quot;motionEndBorderMode&quot;I&quot;motionStartTime&quot;f&quot;motionEndTime&quot;f}'/>
<struct name='MTLIndirectCommandBufferExecutionRange' type64='{MTLIndirectCommandBufferExecutionRange=&quot;location&quot;I&quot;length&quot;I}'/>
<struct name='MTLMapIndirectArguments' type64='{MTLMapIndirectArguments=&quot;regionOriginX&quot;I&quot;regionOriginY&quot;I&quot;regionOriginZ&quot;I&quot;regionSizeWidth&quot;I&quot;regionSizeHeight&quot;I&quot;regionSizeDepth&quot;I&quot;mipMapLevel&quot;I&quot;sliceId&quot;I}'/>
<struct name='MTLOrigin' type64='{MTLOrigin=&quot;x&quot;Q&quot;y&quot;Q&quot;z&quot;Q}'/>
<struct name='MTLPackedFloat3' type64='{_MTLPackedFloat3=}'/>
<struct name='MTLPackedFloat4x3' type64='{_MTLPackedFloat4x3=&quot;columns&quot;[4]{_MTLPackedFloat3}}'/>
<struct name='MTLPackedFloatQuaternion' type64='{MTLPackedFloatQuaternion=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f&quot;w&quot;f}'/>
<struct name='MTLQuadTessellationFactorsHalf' type64='{MTLQuadTessellationFactorsHalf=&quot;edgeTessellationFactor&quot;[4S]&quot;insideTessellationFactor&quot;[2S]}'/>
<struct name='MTLRegion' type64='{MTLRegion=&quot;origin&quot;{MTLOrigin=&quot;x&quot;Q&quot;y&quot;Q&quot;z&quot;Q}&quot;size&quot;{MTLSize=&quot;width&quot;Q&quot;height&quot;Q&quot;depth&quot;Q}}'/>
<struct name='MTLResourceID' type64='{MTLResourceID=&quot;_impl&quot;Q}'/>
<struct name='MTLSamplePosition' type64='{MTLSamplePosition=&quot;x&quot;f&quot;y&quot;f}'/>
<struct name='MTLScissorRect' type64='{MTLScissorRect=&quot;x&quot;Q&quot;y&quot;Q&quot;width&quot;Q&quot;height&quot;Q}'/>
<struct name='MTLSize' type64='{MTLSize=&quot;width&quot;Q&quot;height&quot;Q&quot;depth&quot;Q}'/>
<struct name='MTLSizeAndAlign' type64='{MTLSizeAndAlign=&quot;size&quot;Q&quot;align&quot;Q}'/>
<struct name='MTLStageInRegionIndirectArguments' type64='{MTLStageInRegionIndirectArguments=&quot;stageInOrigin&quot;[3I]&quot;stageInSize&quot;[3I]}'/>
<struct name='MTLTextureSwizzleChannels' type64='{MTLTextureSwizzleChannels=&quot;red&quot;C&quot;green&quot;C&quot;blue&quot;C&quot;alpha&quot;C}'/>
<struct name='MTLTriangleTessellationFactorsHalf' type64='{MTLTriangleTessellationFactorsHalf=&quot;edgeTessellationFactor&quot;[3S]&quot;insideTessellationFactor&quot;S}'/>
<struct name='MTLVertexAmplificationViewMapping' type64='{MTLVertexAmplificationViewMapping=&quot;viewportArrayIndexOffset&quot;I&quot;renderTargetArrayIndexOffset&quot;I}'/>
<struct name='MTLViewport' type64='{MTLViewport=&quot;originX&quot;d&quot;originY&quot;d&quot;width&quot;d&quot;height&quot;d&quot;znear&quot;d&quot;zfar&quot;d}'/>
<struct name='struct (anonymous at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.1.Internal.sdk/System/Library/Frameworks/Metal.framework/Headers/MTLAccelerationStructureTypes.h:12:9)' type64='{struct (anonymous at /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX15.1.Internal.sdk/System/Library/Frameworks/Metal.framework/Headers/MTLAccelerationStructureTypes.h:12:9)=&quot;x&quot;f&quot;y&quot;f&quot;z&quot;f}'/>
<constant name='MTLBinaryArchiveDomain' type64='@'/>
<constant name='MTLCaptureErrorDomain' type64='@'/>
<constant name='MTLCommandBufferEncoderInfoErrorKey' type64='@'/>
<constant name='MTLCommandBufferErrorDomain' type64='@'/>
<constant name='MTLCommonCounterClipperInvocations' type64='@'/>
<constant name='MTLCommonCounterClipperPrimitivesOut' type64='@'/>
<constant name='MTLCommonCounterComputeKernelInvocations' type64='@'/>
<constant name='MTLCommonCounterFragmentCycles' type64='@'/>
<constant name='MTLCommonCounterFragmentInvocations' type64='@'/>
<constant name='MTLCommonCounterFragmentsPassed' type64='@'/>
<constant name='MTLCommonCounterPostTessellationVertexCycles' type64='@'/>
<constant name='MTLCommonCounterPostTessellationVertexInvocations' type64='@'/>
<constant name='MTLCommonCounterRenderTargetWriteCycles' type64='@'/>
<constant name='MTLCommonCounterSetStageUtilization' type64='@'/>
<constant name='MTLCommonCounterSetStatistic' type64='@'/>
<constant name='MTLCommonCounterSetTimestamp' type64='@'/>
<constant name='MTLCommonCounterTessellationCycles' type64='@'/>
<constant name='MTLCommonCounterTessellationInputPatches' type64='@'/>
<constant name='MTLCommonCounterTimestamp' type64='@'/>
<constant name='MTLCommonCounterTotalCycles' type64='@'/>
<constant name='MTLCommonCounterVertexCycles' type64='@'/>
<constant name='MTLCommonCounterVertexInvocations' type64='@'/>
<constant name='MTLCounterErrorDomain' type64='@'/>
<constant name='MTLDeviceRemovalRequestedNotification' type64='@'/>
<constant name='MTLDeviceWasAddedNotification' type64='@'/>
<constant name='MTLDeviceWasRemovedNotification' type64='@'/>
<constant name='MTLDynamicLibraryDomain' type64='@'/>
<constant name='MTLIOErrorDomain' type64='@'/>
<constant name='MTLLibraryErrorDomain' type64='@'/>
<constant name='MTLLogStateErrorDomain' type64='@'/>
<constant name='NSDeviceCertificationiPhonePerformanceGaming' type64='q'/>
<constant name='NSProcessInfoPerformanceProfileDidChangeNotification' type64='@'/>
<constant name='NSProcessPerformanceProfileDefault' type64='q'/>
<constant name='NSProcessPerformanceProfileSustained' type64='q'/>
<enum name='MTLAccelerationStructureInstanceDescriptorTypeDefault' value64='0'/>
<enum name='MTLAccelerationStructureInstanceDescriptorTypeIndirect' value64='3'/>
<enum name='MTLAccelerationStructureInstanceDescriptorTypeIndirectMotion' value64='4'/>
<enum name='MTLAccelerationStructureInstanceDescriptorTypeMotion' value64='2'/>
<enum name='MTLAccelerationStructureInstanceDescriptorTypeUserID' value64='1'/>
<enum name='MTLAccelerationStructureInstanceOptionDisableTriangleCulling' value64='1'/>
<enum name='MTLAccelerationStructureInstanceOptionNonOpaque' value64='8'/>
<enum name='MTLAccelerationStructureInstanceOptionNone' value64='0'/>
<enum name='MTLAccelerationStructureInstanceOptionOpaque' value64='4'/>
<enum name='MTLAccelerationStructureInstanceOptionTriangleFrontFacingWindingCounterClockwise' value64='2'/>
<enum name='MTLAccelerationStructureRefitOptionPerPrimitiveData' value64='2'/>
<enum name='MTLAccelerationStructureRefitOptionVertexData' value64='1'/>
<enum name='MTLAccelerationStructureUsageExtendedLimits' value64='4'/>
<enum name='MTLAccelerationStructureUsageNone' value64='0'/>
<enum name='MTLAccelerationStructureUsagePreferFastBuild' value64='2'/>
<enum name='MTLAccelerationStructureUsageRefit' value64='1'/>
<enum name='MTLArgumentAccessReadOnly' value64='0'/>
<enum name='MTLArgumentAccessReadWrite' value64='1'/>
<enum name='MTLArgumentAccessWriteOnly' value64='2'/>
<enum name='MTLArgumentBuffersTier1' value64='0'/>
<enum name='MTLArgumentBuffersTier2' value64='1'/>
<enum name='MTLArgumentTypeBuffer' value64='0'/>
<enum name='MTLArgumentTypeImageblock' value64='17'/>
<enum name='MTLArgumentTypeImageblockData' value64='16'/>
<enum name='MTLArgumentTypeInstanceAccelerationStructure' value64='26'/>
<enum name='MTLArgumentTypeIntersectionFunctionTable' value64='27'/>
<enum name='MTLArgumentTypePrimitiveAccelerationStructure' value64='25'/>
<enum name='MTLArgumentTypeSampler' value64='3'/>
<enum name='MTLArgumentTypeTexture' value64='2'/>
<enum name='MTLArgumentTypeThreadgroupMemory' value64='1'/>
<enum name='MTLArgumentTypeVisibleFunctionTable' value64='24'/>
<enum name='MTLAttributeFormatChar' value64='46'/>
<enum name='MTLAttributeFormatChar2' value64='4'/>
<enum name='MTLAttributeFormatChar2Normalized' value64='10'/>
<enum name='MTLAttributeFormatChar3' value64='5'/>
<enum name='MTLAttributeFormatChar3Normalized' value64='11'/>
<enum name='MTLAttributeFormatChar4' value64='6'/>
<enum name='MTLAttributeFormatChar4Normalized' value64='12'/>
<enum name='MTLAttributeFormatCharNormalized' value64='48'/>
<enum name='MTLAttributeFormatFloat' value64='28'/>
<enum name='MTLAttributeFormatFloat2' value64='29'/>
<enum name='MTLAttributeFormatFloat3' value64='30'/>
<enum name='MTLAttributeFormatFloat4' value64='31'/>
<enum name='MTLAttributeFormatFloatRG11B10' value64='54'/>
<enum name='MTLAttributeFormatFloatRGB9E5' value64='55'/>
<enum name='MTLAttributeFormatHalf' value64='53'/>
<enum name='MTLAttributeFormatHalf2' value64='25'/>
<enum name='MTLAttributeFormatHalf3' value64='26'/>
<enum name='MTLAttributeFormatHalf4' value64='27'/>
<enum name='MTLAttributeFormatInt' value64='32'/>
<enum name='MTLAttributeFormatInt1010102Normalized' value64='40'/>
<enum name='MTLAttributeFormatInt2' value64='33'/>
<enum name='MTLAttributeFormatInt3' value64='34'/>
<enum name='MTLAttributeFormatInt4' value64='35'/>
<enum name='MTLAttributeFormatInvalid' value64='0'/>
<enum name='MTLAttributeFormatShort' value64='50'/>
<enum name='MTLAttributeFormatShort2' value64='16'/>
<enum name='MTLAttributeFormatShort2Normalized' value64='22'/>
<enum name='MTLAttributeFormatShort3' value64='17'/>
<enum name='MTLAttributeFormatShort3Normalized' value64='23'/>
<enum name='MTLAttributeFormatShort4' value64='18'/>
<enum name='MTLAttributeFormatShort4Normalized' value64='24'/>
<enum name='MTLAttributeFormatShortNormalized' value64='52'/>
<enum name='MTLAttributeFormatUChar' value64='45'/>
<enum name='MTLAttributeFormatUChar2' value64='1'/>
<enum name='MTLAttributeFormatUChar2Normalized' value64='7'/>
<enum name='MTLAttributeFormatUChar3' value64='2'/>
<enum name='MTLAttributeFormatUChar3Normalized' value64='8'/>
<enum name='MTLAttributeFormatUChar4' value64='3'/>
<enum name='MTLAttributeFormatUChar4Normalized' value64='9'/>
<enum name='MTLAttributeFormatUChar4Normalized_BGRA' value64='42'/>
<enum name='MTLAttributeFormatUCharNormalized' value64='47'/>
<enum name='MTLAttributeFormatUInt' value64='36'/>
<enum name='MTLAttributeFormatUInt1010102Normalized' value64='41'/>
<enum name='MTLAttributeFormatUInt2' value64='37'/>
<enum name='MTLAttributeFormatUInt3' value64='38'/>
<enum name='MTLAttributeFormatUInt4' value64='39'/>
<enum name='MTLAttributeFormatUShort' value64='49'/>
<enum name='MTLAttributeFormatUShort2' value64='13'/>
<enum name='MTLAttributeFormatUShort2Normalized' value64='19'/>
<enum name='MTLAttributeFormatUShort3' value64='14'/>
<enum name='MTLAttributeFormatUShort3Normalized' value64='20'/>
<enum name='MTLAttributeFormatUShort4' value64='15'/>
<enum name='MTLAttributeFormatUShort4Normalized' value64='21'/>
<enum name='MTLAttributeFormatUShortNormalized' value64='51'/>
<enum name='MTLAttributeStrideStatic' value64='-1'/>
<enum name='MTLBarrierScopeBuffers' value64='1'/>
<enum name='MTLBarrierScopeRenderTargets' value64='4'/>
<enum name='MTLBarrierScopeTextures' value64='2'/>
<enum name='MTLBinaryArchiveErrorCompilationFailure' value64='3'/>
<enum name='MTLBinaryArchiveErrorInternalError' value64='4'/>
<enum name='MTLBinaryArchiveErrorInvalidFile' value64='1'/>
<enum name='MTLBinaryArchiveErrorNone' value64='0'/>
<enum name='MTLBinaryArchiveErrorUnexpectedElement' value64='2'/>
<enum name='MTLBindingAccessReadOnly' value64='0'/>
<enum name='MTLBindingAccessReadWrite' value64='1'/>
<enum name='MTLBindingAccessWriteOnly' value64='2'/>
<enum name='MTLBindingTypeBuffer' value64='0'/>
<enum name='MTLBindingTypeImageblock' value64='17'/>
<enum name='MTLBindingTypeImageblockData' value64='16'/>
<enum name='MTLBindingTypeInstanceAccelerationStructure' value64='26'/>
<enum name='MTLBindingTypeIntersectionFunctionTable' value64='27'/>
<enum name='MTLBindingTypeObjectPayload' value64='34'/>
<enum name='MTLBindingTypePrimitiveAccelerationStructure' value64='25'/>
<enum name='MTLBindingTypeSampler' value64='3'/>
<enum name='MTLBindingTypeTexture' value64='2'/>
<enum name='MTLBindingTypeThreadgroupMemory' value64='1'/>
<enum name='MTLBindingTypeVisibleFunctionTable' value64='24'/>
<enum name='MTLBlendFactorBlendAlpha' value64='13'/>
<enum name='MTLBlendFactorBlendColor' value64='11'/>
<enum name='MTLBlendFactorDestinationAlpha' value64='8'/>
<enum name='MTLBlendFactorDestinationColor' value64='6'/>
<enum name='MTLBlendFactorOne' value64='1'/>
<enum name='MTLBlendFactorOneMinusBlendAlpha' value64='14'/>
<enum name='MTLBlendFactorOneMinusBlendColor' value64='12'/>
<enum name='MTLBlendFactorOneMinusDestinationAlpha' value64='9'/>
<enum name='MTLBlendFactorOneMinusDestinationColor' value64='7'/>
<enum name='MTLBlendFactorOneMinusSource1Alpha' value64='18'/>
<enum name='MTLBlendFactorOneMinusSource1Color' value64='16'/>
<enum name='MTLBlendFactorOneMinusSourceAlpha' value64='5'/>
<enum name='MTLBlendFactorOneMinusSourceColor' value64='3'/>
<enum name='MTLBlendFactorSource1Alpha' value64='17'/>
<enum name='MTLBlendFactorSource1Color' value64='15'/>
<enum name='MTLBlendFactorSourceAlpha' value64='4'/>
<enum name='MTLBlendFactorSourceAlphaSaturated' value64='10'/>
<enum name='MTLBlendFactorSourceColor' value64='2'/>
<enum name='MTLBlendFactorZero' value64='0'/>
<enum name='MTLBlendOperationAdd' value64='0'/>
<enum name='MTLBlendOperationMax' value64='4'/>
<enum name='MTLBlendOperationMin' value64='3'/>
<enum name='MTLBlendOperationReverseSubtract' value64='2'/>
<enum name='MTLBlendOperationSubtract' value64='1'/>
<enum name='MTLBlitOptionDepthFromDepthStencil' value64='1'/>
<enum name='MTLBlitOptionNone' value64='0'/>
<enum name='MTLBlitOptionRowLinearPVRTC' value64='4'/>
<enum name='MTLBlitOptionStencilFromDepthStencil' value64='2'/>
<enum name='MTLBufferLayoutStrideDynamic' value64='-1'/>
<enum name='MTLCPUCacheModeDefaultCache' value64='0'/>
<enum name='MTLCPUCacheModeWriteCombined' value64='1'/>
<enum name='MTLCaptureDestinationDeveloperTools' value64='1'/>
<enum name='MTLCaptureDestinationGPUTraceDocument' value64='2'/>
<enum name='MTLCaptureErrorAlreadyCapturing' value64='2'/>
<enum name='MTLCaptureErrorInvalidDescriptor' value64='3'/>
<enum name='MTLCaptureErrorNotSupported' value64='1'/>
<enum name='MTLColorWriteMaskAll' value64='15'/>
<enum name='MTLColorWriteMaskAlpha' value64='1'/>
<enum name='MTLColorWriteMaskBlue' value64='2'/>
<enum name='MTLColorWriteMaskGreen' value64='4'/>
<enum name='MTLColorWriteMaskNone' value64='0'/>
<enum name='MTLColorWriteMaskRed' value64='8'/>
<enum name='MTLCommandBufferErrorAccessRevoked' value64='4'/>
<enum name='MTLCommandBufferErrorBlacklisted' value64='4'/>
<enum name='MTLCommandBufferErrorDeviceRemoved' value64='11'/>
<enum name='MTLCommandBufferErrorInternal' value64='1'/>
<enum name='MTLCommandBufferErrorInvalidResource' value64='9'/>
<enum name='MTLCommandBufferErrorMemoryless' value64='10'/>
<enum name='MTLCommandBufferErrorNone' value64='0'/>
<enum name='MTLCommandBufferErrorNotPermitted' value64='7'/>
<enum name='MTLCommandBufferErrorOptionEncoderExecutionStatus' value64='1'/>
<enum name='MTLCommandBufferErrorOptionNone' value64='0'/>
<enum name='MTLCommandBufferErrorOutOfMemory' value64='8'/>
<enum name='MTLCommandBufferErrorPageFault' value64='3'/>
<enum name='MTLCommandBufferErrorStackOverflow' value64='12'/>
<enum name='MTLCommandBufferErrorTimeout' value64='2'/>
<enum name='MTLCommandBufferStatusCommitted' value64='2'/>
<enum name='MTLCommandBufferStatusCompleted' value64='4'/>
<enum name='MTLCommandBufferStatusEnqueued' value64='1'/>
<enum name='MTLCommandBufferStatusError' value64='5'/>
<enum name='MTLCommandBufferStatusNotEnqueued' value64='0'/>
<enum name='MTLCommandBufferStatusScheduled' value64='3'/>
<enum name='MTLCommandEncoderErrorStateAffected' value64='2'/>
<enum name='MTLCommandEncoderErrorStateCompleted' value64='1'/>
<enum name='MTLCommandEncoderErrorStateFaulted' value64='4'/>
<enum name='MTLCommandEncoderErrorStatePending' value64='3'/>
<enum name='MTLCommandEncoderErrorStateUnknown' value64='0'/>
<enum name='MTLCompareFunctionAlways' value64='7'/>
<enum name='MTLCompareFunctionEqual' value64='2'/>
<enum name='MTLCompareFunctionGreater' value64='4'/>
<enum name='MTLCompareFunctionGreaterEqual' value64='6'/>
<enum name='MTLCompareFunctionLess' value64='1'/>
<enum name='MTLCompareFunctionLessEqual' value64='3'/>
<enum name='MTLCompareFunctionNever' value64='0'/>
<enum name='MTLCompareFunctionNotEqual' value64='5'/>
<enum name='MTLCompileSymbolVisibilityDefault' value64='0'/>
<enum name='MTLCompileSymbolVisibilityHidden' value64='1'/>
<enum name='MTLCounterDontSample' value64='-1'/>
<enum name='MTLCounterErrorValue' value64='-1'/>
<enum name='MTLCounterSampleBufferErrorInternal' value64='2'/>
<enum name='MTLCounterSampleBufferErrorInvalid' value64='1'/>
<enum name='MTLCounterSampleBufferErrorOutOfMemory' value64='0'/>
<enum name='MTLCounterSamplingPointAtBlitBoundary' value64='4'/>
<enum name='MTLCounterSamplingPointAtDispatchBoundary' value64='2'/>
<enum name='MTLCounterSamplingPointAtDrawBoundary' value64='1'/>
<enum name='MTLCounterSamplingPointAtStageBoundary' value64='0'/>
<enum name='MTLCounterSamplingPointAtTileDispatchBoundary' value64='3'/>
<enum name='MTLCullModeBack' value64='2'/>
<enum name='MTLCullModeFront' value64='1'/>
<enum name='MTLCullModeNone' value64='0'/>
<enum name='MTLCurveBasisBSpline' value64='0'/>
<enum name='MTLCurveBasisBezier' value64='3'/>
<enum name='MTLCurveBasisCatmullRom' value64='1'/>
<enum name='MTLCurveBasisLinear' value64='2'/>
<enum name='MTLCurveEndCapsDisk' value64='1'/>
<enum name='MTLCurveEndCapsNone' value64='0'/>
<enum name='MTLCurveEndCapsSphere' value64='2'/>
<enum name='MTLCurveTypeFlat' value64='1'/>
<enum name='MTLCurveTypeRound' value64='0'/>
<enum name='MTLDataTypeArray' value64='2'/>
<enum name='MTLDataTypeBFloat' value64='121'/>
<enum name='MTLDataTypeBFloat2' value64='122'/>
<enum name='MTLDataTypeBFloat3' value64='123'/>
<enum name='MTLDataTypeBFloat4' value64='124'/>
<enum name='MTLDataTypeBool' value64='53'/>
<enum name='MTLDataTypeBool2' value64='54'/>
<enum name='MTLDataTypeBool3' value64='55'/>
<enum name='MTLDataTypeBool4' value64='56'/>
<enum name='MTLDataTypeChar' value64='45'/>
<enum name='MTLDataTypeChar2' value64='46'/>
<enum name='MTLDataTypeChar3' value64='47'/>
<enum name='MTLDataTypeChar4' value64='48'/>
<enum name='MTLDataTypeComputePipeline' value64='79'/>
<enum name='MTLDataTypeFloat' value64='3'/>
<enum name='MTLDataTypeFloat2' value64='4'/>
<enum name='MTLDataTypeFloat2x2' value64='7'/>
<enum name='MTLDataTypeFloat2x3' value64='8'/>
<enum name='MTLDataTypeFloat2x4' value64='9'/>
<enum name='MTLDataTypeFloat3' value64='5'/>
<enum name='MTLDataTypeFloat3x2' value64='10'/>
<enum name='MTLDataTypeFloat3x3' value64='11'/>
<enum name='MTLDataTypeFloat3x4' value64='12'/>
<enum name='MTLDataTypeFloat4' value64='6'/>
<enum name='MTLDataTypeFloat4x2' value64='13'/>
<enum name='MTLDataTypeFloat4x3' value64='14'/>
<enum name='MTLDataTypeFloat4x4' value64='15'/>
<enum name='MTLDataTypeHalf' value64='16'/>
<enum name='MTLDataTypeHalf2' value64='17'/>
<enum name='MTLDataTypeHalf2x2' value64='20'/>
<enum name='MTLDataTypeHalf2x3' value64='21'/>
<enum name='MTLDataTypeHalf2x4' value64='22'/>
<enum name='MTLDataTypeHalf3' value64='18'/>
<enum name='MTLDataTypeHalf3x2' value64='23'/>
<enum name='MTLDataTypeHalf3x3' value64='24'/>
<enum name='MTLDataTypeHalf3x4' value64='25'/>
<enum name='MTLDataTypeHalf4' value64='19'/>
<enum name='MTLDataTypeHalf4x2' value64='26'/>
<enum name='MTLDataTypeHalf4x3' value64='27'/>
<enum name='MTLDataTypeHalf4x4' value64='28'/>
<enum name='MTLDataTypeIndirectCommandBuffer' value64='80'/>
<enum name='MTLDataTypeInstanceAccelerationStructure' value64='118'/>
<enum name='MTLDataTypeInt' value64='29'/>
<enum name='MTLDataTypeInt2' value64='30'/>
<enum name='MTLDataTypeInt3' value64='31'/>
<enum name='MTLDataTypeInt4' value64='32'/>
<enum name='MTLDataTypeIntersectionFunctionTable' value64='116'/>
<enum name='MTLDataTypeLong' value64='81'/>
<enum name='MTLDataTypeLong2' value64='82'/>
<enum name='MTLDataTypeLong3' value64='83'/>
<enum name='MTLDataTypeLong4' value64='84'/>
<enum name='MTLDataTypeNone' value64='0'/>
<enum name='MTLDataTypePointer' value64='60'/>
<enum name='MTLDataTypePrimitiveAccelerationStructure' value64='117'/>
<enum name='MTLDataTypeR16Snorm' value64='65'/>
<enum name='MTLDataTypeR16Unorm' value64='64'/>
<enum name='MTLDataTypeR8Snorm' value64='63'/>
<enum name='MTLDataTypeR8Unorm' value64='62'/>
<enum name='MTLDataTypeRG11B10Float' value64='76'/>
<enum name='MTLDataTypeRG16Snorm' value64='69'/>
<enum name='MTLDataTypeRG16Unorm' value64='68'/>
<enum name='MTLDataTypeRG8Snorm' value64='67'/>
<enum name='MTLDataTypeRG8Unorm' value64='66'/>
<enum name='MTLDataTypeRGB10A2Unorm' value64='75'/>
<enum name='MTLDataTypeRGB9E5Float' value64='77'/>
<enum name='MTLDataTypeRGBA16Snorm' value64='74'/>
<enum name='MTLDataTypeRGBA16Unorm' value64='73'/>
<enum name='MTLDataTypeRGBA8Snorm' value64='72'/>
<enum name='MTLDataTypeRGBA8Unorm' value64='70'/>
<enum name='MTLDataTypeRGBA8Unorm_sRGB' value64='71'/>
<enum name='MTLDataTypeRenderPipeline' value64='78'/>
<enum name='MTLDataTypeSampler' value64='59'/>
<enum name='MTLDataTypeShort' value64='37'/>
<enum name='MTLDataTypeShort2' value64='38'/>
<enum name='MTLDataTypeShort3' value64='39'/>
<enum name='MTLDataTypeShort4' value64='40'/>
<enum name='MTLDataTypeStruct' value64='1'/>
<enum name='MTLDataTypeTexture' value64='58'/>
<enum name='MTLDataTypeUChar' value64='49'/>
<enum name='MTLDataTypeUChar2' value64='50'/>
<enum name='MTLDataTypeUChar3' value64='51'/>
<enum name='MTLDataTypeUChar4' value64='52'/>
<enum name='MTLDataTypeUInt' value64='33'/>
<enum name='MTLDataTypeUInt2' value64='34'/>
<enum name='MTLDataTypeUInt3' value64='35'/>
<enum name='MTLDataTypeUInt4' value64='36'/>
<enum name='MTLDataTypeULong' value64='85'/>
<enum name='MTLDataTypeULong2' value64='86'/>
<enum name='MTLDataTypeULong3' value64='87'/>
<enum name='MTLDataTypeULong4' value64='88'/>
<enum name='MTLDataTypeUShort' value64='41'/>
<enum name='MTLDataTypeUShort2' value64='42'/>
<enum name='MTLDataTypeUShort3' value64='43'/>
<enum name='MTLDataTypeUShort4' value64='44'/>
<enum name='MTLDataTypeVisibleFunctionTable' value64='115'/>
<enum name='MTLDepthClipModeClamp' value64='1'/>
<enum name='MTLDepthClipModeClip' value64='0'/>
<enum name='MTLDeviceLocationBuiltIn' value64='0'/>
<enum name='MTLDeviceLocationExternal' value64='2'/>
<enum name='MTLDeviceLocationSlot' value64='1'/>
<enum name='MTLDeviceLocationUnspecified' value64='-1'/>
<enum name='MTLDispatchTypeConcurrent' value64='1'/>
<enum name='MTLDispatchTypeSerial' value64='0'/>
<enum name='MTLDynamicLibraryErrorCompilationFailure' value64='2'/>
<enum name='MTLDynamicLibraryErrorDependencyLoadFailure' value64='4'/>
<enum name='MTLDynamicLibraryErrorInvalidFile' value64='1'/>
<enum name='MTLDynamicLibraryErrorNone' value64='0'/>
<enum name='MTLDynamicLibraryErrorUnresolvedInstallName' value64='3'/>
<enum name='MTLDynamicLibraryErrorUnsupported' value64='5'/>
<enum name='MTLFeatureSet_OSX_GPUFamily1_v1' value64='10000'/>
<enum name='MTLFeatureSet_OSX_GPUFamily1_v2' value64='10001'/>
<enum name='MTLFeatureSet_OSX_ReadWriteTextureTier2' value64='10002'/>
<enum name='MTLFeatureSet_TVOS_GPUFamily1_v1' value64='30000'/>
<enum name='MTLFeatureSet_iOS_GPUFamily1_v1' value64='0'/>
<enum name='MTLFeatureSet_iOS_GPUFamily1_v2' value64='2'/>
<enum name='MTLFeatureSet_iOS_GPUFamily1_v3' value64='5'/>
<enum name='MTLFeatureSet_iOS_GPUFamily1_v4' value64='8'/>
<enum name='MTLFeatureSet_iOS_GPUFamily1_v5' value64='12'/>
<enum name='MTLFeatureSet_iOS_GPUFamily2_v1' value64='1'/>
<enum name='MTLFeatureSet_iOS_GPUFamily2_v2' value64='3'/>
<enum name='MTLFeatureSet_iOS_GPUFamily2_v3' value64='6'/>
<enum name='MTLFeatureSet_iOS_GPUFamily2_v4' value64='9'/>
<enum name='MTLFeatureSet_iOS_GPUFamily2_v5' value64='13'/>
<enum name='MTLFeatureSet_iOS_GPUFamily3_v1' value64='4'/>
<enum name='MTLFeatureSet_iOS_GPUFamily3_v2' value64='7'/>
<enum name='MTLFeatureSet_iOS_GPUFamily3_v3' value64='10'/>
<enum name='MTLFeatureSet_iOS_GPUFamily3_v4' value64='14'/>
<enum name='MTLFeatureSet_iOS_GPUFamily4_v1' value64='11'/>
<enum name='MTLFeatureSet_iOS_GPUFamily4_v2' value64='15'/>
<enum name='MTLFeatureSet_iOS_GPUFamily5_v1' value64='16'/>
<enum name='MTLFeatureSet_macOS_GPUFamily1_v1' value64='10000'/>
<enum name='MTLFeatureSet_macOS_GPUFamily1_v2' value64='10001'/>
<enum name='MTLFeatureSet_macOS_GPUFamily1_v3' value64='10003'/>
<enum name='MTLFeatureSet_macOS_GPUFamily1_v4' value64='10004'/>
<enum name='MTLFeatureSet_macOS_GPUFamily2_v1' value64='10005'/>
<enum name='MTLFeatureSet_macOS_ReadWriteTextureTier2' value64='10002'/>
<enum name='MTLFeatureSet_tvOS_GPUFamily1_v1' value64='30000'/>
<enum name='MTLFeatureSet_tvOS_GPUFamily1_v2' value64='30001'/>
<enum name='MTLFeatureSet_tvOS_GPUFamily1_v3' value64='30002'/>
<enum name='MTLFeatureSet_tvOS_GPUFamily1_v4' value64='30004'/>
<enum name='MTLFeatureSet_tvOS_GPUFamily2_v1' value64='30003'/>
<enum name='MTLFeatureSet_tvOS_GPUFamily2_v2' value64='30005'/>
<enum name='MTLFunctionLogTypeValidation' value64='0'/>
<enum name='MTLFunctionOptionCompileToBinary' value64='1'/>
<enum name='MTLFunctionOptionFailOnBinaryArchiveMiss' value64='4'/>
<enum name='MTLFunctionOptionNone' value64='0'/>
<enum name='MTLFunctionOptionStoreFunctionInMetalPipelinesScript' value64='2'/>
<enum name='MTLFunctionOptionStoreFunctionInMetalScript' value64='2'/>
<enum name='MTLFunctionTypeFragment' value64='2'/>
<enum name='MTLFunctionTypeIntersection' value64='6'/>
<enum name='MTLFunctionTypeKernel' value64='3'/>
<enum name='MTLFunctionTypeMesh' value64='7'/>
<enum name='MTLFunctionTypeObject' value64='8'/>
<enum name='MTLFunctionTypeVertex' value64='1'/>
<enum name='MTLFunctionTypeVisible' value64='5'/>
<enum name='MTLGPUFamilyApple1' value64='1001'/>
<enum name='MTLGPUFamilyApple2' value64='1002'/>
<enum name='MTLGPUFamilyApple3' value64='1003'/>
<enum name='MTLGPUFamilyApple4' value64='1004'/>
<enum name='MTLGPUFamilyApple5' value64='1005'/>
<enum name='MTLGPUFamilyApple6' value64='1006'/>
<enum name='MTLGPUFamilyApple7' value64='1007'/>
<enum name='MTLGPUFamilyApple8' value64='1008'/>
<enum name='MTLGPUFamilyApple9' value64='1009'/>
<enum name='MTLGPUFamilyCommon1' value64='3001'/>
<enum name='MTLGPUFamilyCommon2' value64='3002'/>
<enum name='MTLGPUFamilyCommon3' value64='3003'/>
<enum name='MTLGPUFamilyMac1' value64='2001'/>
<enum name='MTLGPUFamilyMac2' value64='2002'/>
<enum name='MTLGPUFamilyMacCatalyst1' value64='4001'/>
<enum name='MTLGPUFamilyMacCatalyst2' value64='4002'/>
<enum name='MTLGPUFamilyMetal3' value64='5001'/>
<enum name='MTLHazardTrackingModeDefault' value64='0'/>
<enum name='MTLHazardTrackingModeTracked' value64='2'/>
<enum name='MTLHazardTrackingModeUntracked' value64='1'/>
<enum name='MTLHeapTypeAutomatic' value64='0'/>
<enum name='MTLHeapTypePlacement' value64='1'/>
<enum name='MTLHeapTypeSparse' value64='2'/>
<enum name='MTLIOCommandQueueTypeConcurrent' value64='0'/>
<enum name='MTLIOCommandQueueTypeSerial' value64='1'/>
<enum name='MTLIOCompressionMethodLZ4' value64='2'/>
<enum name='MTLIOCompressionMethodLZBitmap' value64='4'/>
<enum name='MTLIOCompressionMethodLZFSE' value64='1'/>
<enum name='MTLIOCompressionMethodLZMA' value64='3'/>
<enum name='MTLIOCompressionMethodZlib' value64='0'/>
<enum name='MTLIOCompressionStatusComplete' value64='0'/>
<enum name='MTLIOCompressionStatusError' value64='1'/>
<enum name='MTLIOErrorInternal' value64='2'/>
<enum name='MTLIOErrorURLInvalid' value64='1'/>
<enum name='MTLIOPriorityHigh' value64='0'/>
<enum name='MTLIOPriorityLow' value64='2'/>
<enum name='MTLIOPriorityNormal' value64='1'/>
<enum name='MTLIOStatusCancelled' value64='1'/>
<enum name='MTLIOStatusComplete' value64='3'/>
<enum name='MTLIOStatusError' value64='2'/>
<enum name='MTLIOStatusPending' value64='0'/>
<enum name='MTLIndexTypeUInt16' value64='0'/>
<enum name='MTLIndexTypeUInt32' value64='1'/>
<enum name='MTLIndirectCommandTypeConcurrentDispatch' value64='32'/>
<enum name='MTLIndirectCommandTypeConcurrentDispatchThreads' value64='64'/>
<enum name='MTLIndirectCommandTypeDraw' value64='1'/>
<enum name='MTLIndirectCommandTypeDrawIndexed' value64='2'/>
<enum name='MTLIndirectCommandTypeDrawIndexedPatches' value64='8'/>
<enum name='MTLIndirectCommandTypeDrawMeshThreadgroups' value64='128'/>
<enum name='MTLIndirectCommandTypeDrawMeshThreads' value64='256'/>
<enum name='MTLIndirectCommandTypeDrawPatches' value64='4'/>
<enum name='MTLIntersectionFunctionSignatureCurveData' value64='128'/>
<enum name='MTLIntersectionFunctionSignatureExtendedLimits' value64='32'/>
<enum name='MTLIntersectionFunctionSignatureInstanceMotion' value64='8'/>
<enum name='MTLIntersectionFunctionSignatureInstancing' value64='1'/>
<enum name='MTLIntersectionFunctionSignatureMaxLevels' value64='64'/>
<enum name='MTLIntersectionFunctionSignatureNone' value64='0'/>
<enum name='MTLIntersectionFunctionSignaturePrimitiveMotion' value64='16'/>
<enum name='MTLIntersectionFunctionSignatureTriangleData' value64='2'/>
<enum name='MTLIntersectionFunctionSignatureWorldSpaceData' value64='4'/>
<enum name='MTLLanguageVersion1_0' value64='65536'/>
<enum name='MTLLanguageVersion1_1' value64='65537'/>
<enum name='MTLLanguageVersion1_2' value64='65538'/>
<enum name='MTLLanguageVersion2_0' value64='131072'/>
<enum name='MTLLanguageVersion2_1' value64='131073'/>
<enum name='MTLLanguageVersion2_2' value64='131074'/>
<enum name='MTLLanguageVersion2_3' value64='131075'/>
<enum name='MTLLanguageVersion2_4' value64='131076'/>
<enum name='MTLLanguageVersion3_0' value64='196608'/>
<enum name='MTLLanguageVersion3_1' value64='196609'/>
<enum name='MTLLanguageVersion3_2' value64='196610'/>
<enum name='MTLLibraryErrorCompileFailure' value64='3'/>
<enum name='MTLLibraryErrorCompileWarning' value64='4'/>
<enum name='MTLLibraryErrorFileNotFound' value64='6'/>
<enum name='MTLLibraryErrorFunctionNotFound' value64='5'/>
<enum name='MTLLibraryErrorInternal' value64='2'/>
<enum name='MTLLibraryErrorUnsupported' value64='1'/>
<enum name='MTLLibraryOptimizationLevelDefault' value64='0'/>
<enum name='MTLLibraryOptimizationLevelSize' value64='1'/>
<enum name='MTLLibraryTypeDynamic' value64='1'/>
<enum name='MTLLibraryTypeExecutable' value64='0'/>
<enum name='MTLLoadActionClear' value64='2'/>
<enum name='MTLLoadActionDontCare' value64='0'/>
<enum name='MTLLoadActionLoad' value64='1'/>
<enum name='MTLLogLevelDebug' value64='1'/>
<enum name='MTLLogLevelError' value64='4'/>
<enum name='MTLLogLevelFault' value64='5'/>
<enum name='MTLLogLevelInfo' value64='2'/>
<enum name='MTLLogLevelNotice' value64='3'/>
<enum name='MTLLogLevelUndefined' value64='0'/>
<enum name='MTLLogStateErrorInvalid' value64='2'/>
<enum name='MTLLogStateErrorInvalidSize' value64='1'/>
<enum name='MTLMathFloatingPointFunctionsFast' value64='0'/>
<enum name='MTLMathFloatingPointFunctionsPrecise' value64='1'/>
<enum name='MTLMathModeFast' value64='2'/>
<enum name='MTLMathModeRelaxed' value64='1'/>
<enum name='MTLMathModeSafe' value64='0'/>
<enum name='MTLMatrixLayoutColumnMajor' value64='0'/>
<enum name='MTLMatrixLayoutRowMajor' value64='1'/>
<enum name='MTLMotionBorderModeClamp' value64='0'/>
<enum name='MTLMotionBorderModeVanish' value64='1'/>
<enum name='MTLMultisampleDepthResolveFilterMax' value64='2'/>
<enum name='MTLMultisampleDepthResolveFilterMin' value64='1'/>
<enum name='MTLMultisampleDepthResolveFilterSample0' value64='0'/>
<enum name='MTLMultisampleStencilResolveFilterDepthResolvedSample' value64='1'/>
<enum name='MTLMultisampleStencilResolveFilterSample0' value64='0'/>
<enum name='MTLMutabilityDefault' value64='0'/>
<enum name='MTLMutabilityImmutable' value64='2'/>
<enum name='MTLMutabilityMutable' value64='1'/>
<enum name='MTLPatchTypeNone' value64='0'/>
<enum name='MTLPatchTypeQuad' value64='2'/>
<enum name='MTLPatchTypeTriangle' value64='1'/>
<enum name='MTLPipelineOptionArgumentInfo' value64='1'/>
<enum name='MTLPipelineOptionBindingInfo' value64='1'/>
<enum name='MTLPipelineOptionBufferTypeInfo' value64='2'/>
<enum name='MTLPipelineOptionFailOnBinaryArchiveMiss' value64='4'/>
<enum name='MTLPipelineOptionNone' value64='0'/>
<enum name='MTLPixelFormatA1BGR5Unorm' value64='41'/>
<enum name='MTLPixelFormatA8Unorm' value64='1'/>
<enum name='MTLPixelFormatABGR4Unorm' value64='42'/>
<enum name='MTLPixelFormatASTC_10x10_HDR' value64='234'/>
<enum name='MTLPixelFormatASTC_10x10_LDR' value64='216'/>
<enum name='MTLPixelFormatASTC_10x10_sRGB' value64='198'/>
<enum name='MTLPixelFormatASTC_10x5_HDR' value64='231'/>
<enum name='MTLPixelFormatASTC_10x5_LDR' value64='213'/>
<enum name='MTLPixelFormatASTC_10x5_sRGB' value64='195'/>
<enum name='MTLPixelFormatASTC_10x6_HDR' value64='232'/>
<enum name='MTLPixelFormatASTC_10x6_LDR' value64='214'/>
<enum name='MTLPixelFormatASTC_10x6_sRGB' value64='196'/>
<enum name='MTLPixelFormatASTC_10x8_HDR' value64='233'/>
<enum name='MTLPixelFormatASTC_10x8_LDR' value64='215'/>
<enum name='MTLPixelFormatASTC_10x8_sRGB' value64='197'/>
<enum name='MTLPixelFormatASTC_12x10_HDR' value64='235'/>
<enum name='MTLPixelFormatASTC_12x10_LDR' value64='217'/>
<enum name='MTLPixelFormatASTC_12x10_sRGB' value64='199'/>
<enum name='MTLPixelFormatASTC_12x12_HDR' value64='236'/>
<enum name='MTLPixelFormatASTC_12x12_LDR' value64='218'/>
<enum name='MTLPixelFormatASTC_12x12_sRGB' value64='200'/>
<enum name='MTLPixelFormatASTC_4x4_HDR' value64='222'/>
<enum name='MTLPixelFormatASTC_4x4_LDR' value64='204'/>
<enum name='MTLPixelFormatASTC_4x4_sRGB' value64='186'/>
<enum name='MTLPixelFormatASTC_5x4_HDR' value64='223'/>
<enum name='MTLPixelFormatASTC_5x4_LDR' value64='205'/>
<enum name='MTLPixelFormatASTC_5x4_sRGB' value64='187'/>
<enum name='MTLPixelFormatASTC_5x5_HDR' value64='224'/>
<enum name='MTLPixelFormatASTC_5x5_LDR' value64='206'/>
<enum name='MTLPixelFormatASTC_5x5_sRGB' value64='188'/>
<enum name='MTLPixelFormatASTC_6x5_HDR' value64='225'/>
<enum name='MTLPixelFormatASTC_6x5_LDR' value64='207'/>
<enum name='MTLPixelFormatASTC_6x5_sRGB' value64='189'/>
<enum name='MTLPixelFormatASTC_6x6_HDR' value64='226'/>
<enum name='MTLPixelFormatASTC_6x6_LDR' value64='208'/>
<enum name='MTLPixelFormatASTC_6x6_sRGB' value64='190'/>
<enum name='MTLPixelFormatASTC_8x5_HDR' value64='228'/>
<enum name='MTLPixelFormatASTC_8x5_LDR' value64='210'/>
<enum name='MTLPixelFormatASTC_8x5_sRGB' value64='192'/>
<enum name='MTLPixelFormatASTC_8x6_HDR' value64='229'/>
<enum name='MTLPixelFormatASTC_8x6_LDR' value64='211'/>
<enum name='MTLPixelFormatASTC_8x6_sRGB' value64='193'/>
<enum name='MTLPixelFormatASTC_8x8_HDR' value64='230'/>
<enum name='MTLPixelFormatASTC_8x8_LDR' value64='212'/>
<enum name='MTLPixelFormatASTC_8x8_sRGB' value64='194'/>
<enum name='MTLPixelFormatB5G6R5Unorm' value64='40'/>
<enum name='MTLPixelFormatBC1_RGBA' value64='130'/>
<enum name='MTLPixelFormatBC1_RGBA_sRGB' value64='131'/>
<enum name='MTLPixelFormatBC2_RGBA' value64='132'/>
<enum name='MTLPixelFormatBC2_RGBA_sRGB' value64='133'/>
<enum name='MTLPixelFormatBC3_RGBA' value64='134'/>
<enum name='MTLPixelFormatBC3_RGBA_sRGB' value64='135'/>
<enum name='MTLPixelFormatBC4_RSnorm' value64='141'/>
<enum name='MTLPixelFormatBC4_RUnorm' value64='140'/>
<enum name='MTLPixelFormatBC5_RGSnorm' value64='143'/>
<enum name='MTLPixelFormatBC5_RGUnorm' value64='142'/>
<enum name='MTLPixelFormatBC6H_RGBFloat' value64='150'/>
<enum name='MTLPixelFormatBC6H_RGBUfloat' value64='151'/>
<enum name='MTLPixelFormatBC7_RGBAUnorm' value64='152'/>
<enum name='MTLPixelFormatBC7_RGBAUnorm_sRGB' value64='153'/>
<enum name='MTLPixelFormatBGR10A2Unorm' value64='94'/>
<enum name='MTLPixelFormatBGR10_XR' value64='554'/>
<enum name='MTLPixelFormatBGR10_XR_sRGB' value64='555'/>
<enum name='MTLPixelFormatBGR5A1Unorm' value64='43'/>
<enum name='MTLPixelFormatBGRA10_XR' value64='552'/>
<enum name='MTLPixelFormatBGRA10_XR_sRGB' value64='553'/>
<enum name='MTLPixelFormatBGRA8Unorm' value64='80'/>
<enum name='MTLPixelFormatBGRA8Unorm_sRGB' value64='81'/>
<enum name='MTLPixelFormatBGRG422' value64='241'/>
<enum name='MTLPixelFormatDepth16Unorm' value64='250'/>
<enum name='MTLPixelFormatDepth24Unorm_Stencil8' value64='255'/>
<enum name='MTLPixelFormatDepth32Float' value64='252'/>
<enum name='MTLPixelFormatDepth32Float_Stencil8' value64='260'/>
<enum name='MTLPixelFormatEAC_R11Snorm' value64='172'/>
<enum name='MTLPixelFormatEAC_R11Unorm' value64='170'/>
<enum name='MTLPixelFormatEAC_RG11Snorm' value64='176'/>
<enum name='MTLPixelFormatEAC_RG11Unorm' value64='174'/>
<enum name='MTLPixelFormatEAC_RGBA8' value64='178'/>
<enum name='MTLPixelFormatEAC_RGBA8_sRGB' value64='179'/>
<enum name='MTLPixelFormatETC2_RGB8' value64='180'/>
<enum name='MTLPixelFormatETC2_RGB8A1' value64='182'/>
<enum name='MTLPixelFormatETC2_RGB8A1_sRGB' value64='183'/>
<enum name='MTLPixelFormatETC2_RGB8_sRGB' value64='181'/>
<enum name='MTLPixelFormatGBGR422' value64='240'/>
<enum name='MTLPixelFormatInvalid' value64='0'/>
<enum name='MTLPixelFormatPVRTC_RGBA_2BPP' value64='164'/>
<enum name='MTLPixelFormatPVRTC_RGBA_2BPP_sRGB' value64='165'/>
<enum name='MTLPixelFormatPVRTC_RGBA_4BPP' value64='166'/>
<enum name='MTLPixelFormatPVRTC_RGBA_4BPP_sRGB' value64='167'/>
<enum name='MTLPixelFormatPVRTC_RGB_2BPP' value64='160'/>
<enum name='MTLPixelFormatPVRTC_RGB_2BPP_sRGB' value64='161'/>
<enum name='MTLPixelFormatPVRTC_RGB_4BPP' value64='162'/>
<enum name='MTLPixelFormatPVRTC_RGB_4BPP_sRGB' value64='163'/>
<enum name='MTLPixelFormatR16Float' value64='25'/>
<enum name='MTLPixelFormatR16Sint' value64='24'/>
<enum name='MTLPixelFormatR16Snorm' value64='22'/>
<enum name='MTLPixelFormatR16Uint' value64='23'/>
<enum name='MTLPixelFormatR16Unorm' value64='20'/>
<enum name='MTLPixelFormatR32Float' value64='55'/>
<enum name='MTLPixelFormatR32Sint' value64='54'/>
<enum name='MTLPixelFormatR32Uint' value64='53'/>
<enum name='MTLPixelFormatR8Sint' value64='14'/>
<enum name='MTLPixelFormatR8Snorm' value64='12'/>
<enum name='MTLPixelFormatR8Uint' value64='13'/>
<enum name='MTLPixelFormatR8Unorm' value64='10'/>
<enum name='MTLPixelFormatR8Unorm_sRGB' value64='11'/>
<enum name='MTLPixelFormatRG11B10Float' value64='92'/>
<enum name='MTLPixelFormatRG16Float' value64='65'/>
<enum name='MTLPixelFormatRG16Sint' value64='64'/>
<enum name='MTLPixelFormatRG16Snorm' value64='62'/>
<enum name='MTLPixelFormatRG16Uint' value64='63'/>
<enum name='MTLPixelFormatRG16Unorm' value64='60'/>
<enum name='MTLPixelFormatRG32Float' value64='105'/>
<enum name='MTLPixelFormatRG32Sint' value64='104'/>
<enum name='MTLPixelFormatRG32Uint' value64='103'/>
<enum name='MTLPixelFormatRG8Sint' value64='34'/>
<enum name='MTLPixelFormatRG8Snorm' value64='32'/>
<enum name='MTLPixelFormatRG8Uint' value64='33'/>
<enum name='MTLPixelFormatRG8Unorm' value64='30'/>
<enum name='MTLPixelFormatRG8Unorm_sRGB' value64='31'/>
<enum name='MTLPixelFormatRGB10A2Uint' value64='91'/>
<enum name='MTLPixelFormatRGB10A2Unorm' value64='90'/>
<enum name='MTLPixelFormatRGB9E5Float' value64='93'/>
<enum name='MTLPixelFormatRGBA16Float' value64='115'/>
<enum name='MTLPixelFormatRGBA16Sint' value64='114'/>
<enum name='MTLPixelFormatRGBA16Snorm' value64='112'/>
<enum name='MTLPixelFormatRGBA16Uint' value64='113'/>
<enum name='MTLPixelFormatRGBA16Unorm' value64='110'/>
<enum name='MTLPixelFormatRGBA32Float' value64='125'/>
<enum name='MTLPixelFormatRGBA32Sint' value64='124'/>
<enum name='MTLPixelFormatRGBA32Uint' value64='123'/>
<enum name='MTLPixelFormatRGBA8Sint' value64='74'/>
<enum name='MTLPixelFormatRGBA8Snorm' value64='72'/>
<enum name='MTLPixelFormatRGBA8Uint' value64='73'/>
<enum name='MTLPixelFormatRGBA8Unorm' value64='70'/>
<enum name='MTLPixelFormatRGBA8Unorm_sRGB' value64='71'/>
<enum name='MTLPixelFormatStencil8' value64='253'/>
<enum name='MTLPixelFormatX24_Stencil8' value64='262'/>
<enum name='MTLPixelFormatX32_Stencil8' value64='261'/>
<enum name='MTLPrimitiveTopologyClassLine' value64='2'/>
<enum name='MTLPrimitiveTopologyClassPoint' value64='1'/>
<enum name='MTLPrimitiveTopologyClassTriangle' value64='3'/>
<enum name='MTLPrimitiveTopologyClassUnspecified' value64='0'/>
<enum name='MTLPrimitiveTypeLine' value64='1'/>
<enum name='MTLPrimitiveTypeLineStrip' value64='2'/>
<enum name='MTLPrimitiveTypePoint' value64='0'/>
<enum name='MTLPrimitiveTypeTriangle' value64='3'/>
<enum name='MTLPrimitiveTypeTriangleStrip' value64='4'/>
<enum name='MTLPurgeableStateEmpty' value64='4'/>
<enum name='MTLPurgeableStateKeepCurrent' value64='1'/>
<enum name='MTLPurgeableStateNonVolatile' value64='2'/>
<enum name='MTLPurgeableStateVolatile' value64='3'/>
<enum name='MTLReadWriteTextureTier1' value64='1'/>
<enum name='MTLReadWriteTextureTier2' value64='2'/>
<enum name='MTLReadWriteTextureTierNone' value64='0'/>
<enum name='MTLRenderStageFragment' value64='2'/>
<enum name='MTLRenderStageMesh' value64='16'/>
<enum name='MTLRenderStageObject' value64='8'/>
<enum name='MTLRenderStageTile' value64='4'/>
<enum name='MTLRenderStageVertex' value64='1'/>
<enum name='MTLResourceCPUCacheModeDefaultCache' value64='0'/>
<enum name='MTLResourceCPUCacheModeMask' value64='15'/>
<enum name='MTLResourceCPUCacheModeShift' value64='0'/>
<enum name='MTLResourceCPUCacheModeWriteCombined' value64='1'/>
<enum name='MTLResourceHazardTrackingModeDefault' value64='0'/>
<enum name='MTLResourceHazardTrackingModeMask' value64='768'/>
<enum name='MTLResourceHazardTrackingModeShift' value64='8'/>
<enum name='MTLResourceHazardTrackingModeTracked' value64='512'/>
<enum name='MTLResourceHazardTrackingModeUntracked' value64='256'/>
<enum name='MTLResourceOptionCPUCacheModeDefault' value64='0'/>
<enum name='MTLResourceOptionCPUCacheModeWriteCombined' value64='1'/>
<enum name='MTLResourceStorageModeManaged' value64='16'/>
<enum name='MTLResourceStorageModeMask' value64='240'/>
<enum name='MTLResourceStorageModeMemoryless' value64='48'/>
<enum name='MTLResourceStorageModePrivate' value64='32'/>
<enum name='MTLResourceStorageModeShared' value64='0'/>
<enum name='MTLResourceStorageModeShift' value64='4'/>
<enum name='MTLResourceUsageRead' value64='1'/>
<enum name='MTLResourceUsageSample' value64='4'/>
<enum name='MTLResourceUsageWrite' value64='2'/>
<enum name='MTLSamplerAddressModeClampToBorderColor' value64='5'/>
<enum name='MTLSamplerAddressModeClampToEdge' value64='0'/>
<enum name='MTLSamplerAddressModeClampToZero' value64='4'/>
<enum name='MTLSamplerAddressModeMirrorClampToEdge' value64='1'/>
<enum name='MTLSamplerAddressModeMirrorRepeat' value64='3'/>
<enum name='MTLSamplerAddressModeRepeat' value64='2'/>
<enum name='MTLSamplerBorderColorOpaqueBlack' value64='1'/>
<enum name='MTLSamplerBorderColorOpaqueWhite' value64='2'/>
<enum name='MTLSamplerBorderColorTransparentBlack' value64='0'/>
<enum name='MTLSamplerMinMagFilterLinear' value64='1'/>
<enum name='MTLSamplerMinMagFilterNearest' value64='0'/>
<enum name='MTLSamplerMipFilterLinear' value64='2'/>
<enum name='MTLSamplerMipFilterNearest' value64='1'/>
<enum name='MTLSamplerMipFilterNotMipmapped' value64='0'/>
<enum name='MTLShaderValidationDefault' value64='0'/>
<enum name='MTLShaderValidationDisabled' value64='2'/>
<enum name='MTLShaderValidationEnabled' value64='1'/>
<enum name='MTLSparsePageSize16' value64='101'/>
<enum name='MTLSparsePageSize256' value64='103'/>
<enum name='MTLSparsePageSize64' value64='102'/>
<enum name='MTLSparseTextureMappingModeMap' value64='0'/>
<enum name='MTLSparseTextureMappingModeUnmap' value64='1'/>
<enum name='MTLSparseTextureRegionAlignmentModeInward' value64='1'/>
<enum name='MTLSparseTextureRegionAlignmentModeOutward' value64='0'/>
<enum name='MTLStencilOperationDecrementClamp' value64='4'/>
<enum name='MTLStencilOperationDecrementWrap' value64='7'/>
<enum name='MTLStencilOperationIncrementClamp' value64='3'/>
<enum name='MTLStencilOperationIncrementWrap' value64='6'/>
<enum name='MTLStencilOperationInvert' value64='5'/>
<enum name='MTLStencilOperationKeep' value64='0'/>
<enum name='MTLStencilOperationReplace' value64='2'/>
<enum name='MTLStencilOperationZero' value64='1'/>
<enum name='MTLStepFunctionConstant' value64='0'/>
<enum name='MTLStepFunctionPerInstance' value64='2'/>
<enum name='MTLStepFunctionPerPatch' value64='3'/>
<enum name='MTLStepFunctionPerPatchControlPoint' value64='4'/>
<enum name='MTLStepFunctionPerVertex' value64='1'/>
<enum name='MTLStepFunctionThreadPositionInGridX' value64='5'/>
<enum name='MTLStepFunctionThreadPositionInGridXIndexed' value64='7'/>
<enum name='MTLStepFunctionThreadPositionInGridY' value64='6'/>
<enum name='MTLStepFunctionThreadPositionInGridYIndexed' value64='8'/>
<enum name='MTLStitchedLibraryOptionFailOnBinaryArchiveMiss' value64='1'/>
<enum name='MTLStitchedLibraryOptionNone' value64='0'/>
<enum name='MTLStitchedLibraryOptionStoreLibraryInMetalPipelinesScript' value64='2'/>
<enum name='MTLStorageModeManaged' value64='1'/>
<enum name='MTLStorageModeMemoryless' value64='3'/>
<enum name='MTLStorageModePrivate' value64='2'/>
<enum name='MTLStorageModeShared' value64='0'/>
<enum name='MTLStoreActionCustomSampleDepthStore' value64='5'/>
<enum name='MTLStoreActionDontCare' value64='0'/>
<enum name='MTLStoreActionMultisampleResolve' value64='2'/>
<enum name='MTLStoreActionOptionCustomSamplePositions' value64='1'/>
<enum name='MTLStoreActionOptionNone' value64='0'/>
<enum name='MTLStoreActionStore' value64='1'/>
<enum name='MTLStoreActionStoreAndMultisampleResolve' value64='3'/>
<enum name='MTLStoreActionUnknown' value64='4'/>
<enum name='MTLTessellationControlPointIndexTypeNone' value64='0'/>
<enum name='MTLTessellationControlPointIndexTypeUInt16' value64='1'/>
<enum name='MTLTessellationControlPointIndexTypeUInt32' value64='2'/>
<enum name='MTLTessellationFactorFormatHalf' value64='0'/>
<enum name='MTLTessellationFactorStepFunctionConstant' value64='0'/>
<enum name='MTLTessellationFactorStepFunctionPerInstance' value64='2'/>
<enum name='MTLTessellationFactorStepFunctionPerPatch' value64='1'/>
<enum name='MTLTessellationFactorStepFunctionPerPatchAndPerInstance' value64='3'/>
<enum name='MTLTessellationPartitionModeFractionalEven' value64='3'/>
<enum name='MTLTessellationPartitionModeFractionalOdd' value64='2'/>
<enum name='MTLTessellationPartitionModeInteger' value64='1'/>
<enum name='MTLTessellationPartitionModePow2' value64='0'/>
<enum name='MTLTextureCompressionTypeLossless' value64='0'/>
<enum name='MTLTextureCompressionTypeLossy' value64='1'/>
<enum name='MTLTextureSwizzleAlpha' value64='5'/>
<enum name='MTLTextureSwizzleBlue' value64='4'/>
<enum name='MTLTextureSwizzleGreen' value64='3'/>
<enum name='MTLTextureSwizzleOne' value64='1'/>
<enum name='MTLTextureSwizzleRed' value64='2'/>
<enum name='MTLTextureSwizzleZero' value64='0'/>
<enum name='MTLTextureType1D' value64='0'/>
<enum name='MTLTextureType1DArray' value64='1'/>
<enum name='MTLTextureType2D' value64='2'/>
<enum name='MTLTextureType2DArray' value64='3'/>
<enum name='MTLTextureType2DMultisample' value64='4'/>
<enum name='MTLTextureType2DMultisampleArray' value64='8'/>
<enum name='MTLTextureType3D' value64='7'/>
<enum name='MTLTextureTypeCube' value64='5'/>
<enum name='MTLTextureTypeCubeArray' value64='6'/>
<enum name='MTLTextureTypeTextureBuffer' value64='9'/>
<enum name='MTLTextureUsagePixelFormatView' value64='16'/>
<enum name='MTLTextureUsageRenderTarget' value64='4'/>
<enum name='MTLTextureUsageShaderAtomic' value64='32'/>
<enum name='MTLTextureUsageShaderRead' value64='1'/>
<enum name='MTLTextureUsageShaderWrite' value64='2'/>
<enum name='MTLTextureUsageUnknown' value64='0'/>
<enum name='MTLTransformTypeComponent' value64='1'/>
<enum name='MTLTransformTypePackedFloat4x3' value64='0'/>
<enum name='MTLTriangleFillModeFill' value64='0'/>
<enum name='MTLTriangleFillModeLines' value64='1'/>
<enum name='MTLVertexFormatChar' value64='46'/>
<enum name='MTLVertexFormatChar2' value64='4'/>
<enum name='MTLVertexFormatChar2Normalized' value64='10'/>
<enum name='MTLVertexFormatChar3' value64='5'/>
<enum name='MTLVertexFormatChar3Normalized' value64='11'/>
<enum name='MTLVertexFormatChar4' value64='6'/>
<enum name='MTLVertexFormatChar4Normalized' value64='12'/>
<enum name='MTLVertexFormatCharNormalized' value64='48'/>
<enum name='MTLVertexFormatFloat' value64='28'/>
<enum name='MTLVertexFormatFloat2' value64='29'/>
<enum name='MTLVertexFormatFloat3' value64='30'/>
<enum name='MTLVertexFormatFloat4' value64='31'/>
<enum name='MTLVertexFormatFloatRG11B10' value64='54'/>
<enum name='MTLVertexFormatFloatRGB9E5' value64='55'/>
<enum name='MTLVertexFormatHalf' value64='53'/>
<enum name='MTLVertexFormatHalf2' value64='25'/>
<enum name='MTLVertexFormatHalf3' value64='26'/>
<enum name='MTLVertexFormatHalf4' value64='27'/>
<enum name='MTLVertexFormatInt' value64='32'/>
<enum name='MTLVertexFormatInt1010102Normalized' value64='40'/>
<enum name='MTLVertexFormatInt2' value64='33'/>
<enum name='MTLVertexFormatInt3' value64='34'/>
<enum name='MTLVertexFormatInt4' value64='35'/>
<enum name='MTLVertexFormatInvalid' value64='0'/>
<enum name='MTLVertexFormatShort' value64='50'/>
<enum name='MTLVertexFormatShort2' value64='16'/>
<enum name='MTLVertexFormatShort2Normalized' value64='22'/>
<enum name='MTLVertexFormatShort3' value64='17'/>
<enum name='MTLVertexFormatShort3Normalized' value64='23'/>
<enum name='MTLVertexFormatShort4' value64='18'/>
<enum name='MTLVertexFormatShort4Normalized' value64='24'/>
<enum name='MTLVertexFormatShortNormalized' value64='52'/>
<enum name='MTLVertexFormatUChar' value64='45'/>
<enum name='MTLVertexFormatUChar2' value64='1'/>
<enum name='MTLVertexFormatUChar2Normalized' value64='7'/>
<enum name='MTLVertexFormatUChar3' value64='2'/>
<enum name='MTLVertexFormatUChar3Normalized' value64='8'/>
<enum name='MTLVertexFormatUChar4' value64='3'/>
<enum name='MTLVertexFormatUChar4Normalized' value64='9'/>
<enum name='MTLVertexFormatUChar4Normalized_BGRA' value64='42'/>
<enum name='MTLVertexFormatUCharNormalized' value64='47'/>
<enum name='MTLVertexFormatUInt' value64='36'/>
<enum name='MTLVertexFormatUInt1010102Normalized' value64='41'/>
<enum name='MTLVertexFormatUInt2' value64='37'/>
<enum name='MTLVertexFormatUInt3' value64='38'/>
<enum name='MTLVertexFormatUInt4' value64='39'/>
<enum name='MTLVertexFormatUShort' value64='49'/>
<enum name='MTLVertexFormatUShort2' value64='13'/>
<enum name='MTLVertexFormatUShort2Normalized' value64='19'/>
<enum name='MTLVertexFormatUShort3' value64='14'/>
<enum name='MTLVertexFormatUShort3Normalized' value64='20'/>
<enum name='MTLVertexFormatUShort4' value64='15'/>
<enum name='MTLVertexFormatUShort4Normalized' value64='21'/>
<enum name='MTLVertexFormatUShortNormalized' value64='51'/>
<enum name='MTLVertexStepFunctionConstant' value64='0'/>
<enum name='MTLVertexStepFunctionPerInstance' value64='2'/>
<enum name='MTLVertexStepFunctionPerPatch' value64='3'/>
<enum name='MTLVertexStepFunctionPerPatchControlPoint' value64='4'/>
<enum name='MTLVertexStepFunctionPerVertex' value64='1'/>
<enum name='MTLVisibilityResultModeBoolean' value64='1'/>
<enum name='MTLVisibilityResultModeCounting' value64='2'/>
<enum name='MTLVisibilityResultModeDisabled' value64='0'/>
<enum name='MTLWindingClockwise' value64='0'/>
<enum name='MTLWindingCounterClockwise' value64='1'/>
<function inline='true' name='MTLClearColorMake'>
<arg type64='d'/>
<arg type64='d'/>
<arg type64='d'/>
<arg type64='d'/>
<retval type64='{_MTLClearColor=dddd}'/>
</function>
<function inline='true' name='MTLCoordinate2DMake'>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='{_MTLCoordinate2D=ff}'/>
</function>
<function name='MTLCopyAllDevices'>
<retval type64='@'/>
</function>
<function name='MTLCopyAllDevicesWithObserver'>
<arg type64='^@'/>
<arg function_pointer='true' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
<retval type64='@'/>
</function>
<function name='MTLCreateSystemDefaultDevice'>
<retval type64='@'/>
</function>
<function name='MTLIOCompressionContextAppendData'>
<arg type64='^v'/>
<arg type64='^v'/>
<arg type64='Q'/>
<retval type64='v'/>
</function>
<function name='MTLIOCompressionContextDefaultChunkSize'>
<retval type64='Q'/>
</function>
<function name='MTLIOCreateCompressionContext'>
<arg type64='*'/>
<arg type64='q'/>
<arg type64='Q'/>
<retval type64='^v'/>
</function>
<function name='MTLIOFlushAndDestroyCompressionContext'>
<arg type64='^v'/>
<retval type64='q'/>
</function>
<function inline='true' name='MTLIndirectCommandBufferExecutionRangeMake'>
<arg type64='I'/>
<arg type64='I'/>
<retval type64='{_MTLIndirectCommandBufferExecutionRange=II}'/>
</function>
<function inline='true' name='MTLOriginMake'>
<arg type64='Q'/>
<arg type64='Q'/>
<arg type64='Q'/>
<retval type64='{_MTLOrigin=QQQ}'/>
</function>
<function inline='true' name='MTLPackedFloat3Make'>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='{_MTLPackedFloat3=(?={?=fff}[3f])}'/>
</function>
<function inline='true' name='MTLPackedFloatQuaternionMake'>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='{MTLPackedFloatQuaternion=ffff}'/>
</function>
<function inline='true' name='MTLRegionMake1D'>
<arg type64='Q'/>
<arg type64='Q'/>
<retval type64='{MTLRegion={MTLOrigin=QQQ}{MTLSize=QQQ}}'/>
</function>
<function inline='true' name='MTLRegionMake2D'>
<arg type64='Q'/>
<arg type64='Q'/>
<arg type64='Q'/>
<arg type64='Q'/>
<retval type64='{MTLRegion={MTLOrigin=QQQ}{MTLSize=QQQ}}'/>
</function>
<function inline='true' name='MTLRegionMake3D'>
<arg type64='Q'/>
<arg type64='Q'/>
<arg type64='Q'/>
<arg type64='Q'/>
<arg type64='Q'/>
<arg type64='Q'/>
<retval type64='{MTLRegion={MTLOrigin=QQQ}{MTLSize=QQQ}}'/>
</function>
<function name='MTLRemoveDeviceObserver'>
<arg type64='@'/>
<retval type64='v'/>
</function>
<function inline='true' name='MTLSamplePositionMake'>
<arg type64='f'/>
<arg type64='f'/>
<retval type64='{_MTLSamplePosition=ff}'/>
</function>
<function inline='true' name='MTLSizeMake'>
<arg type64='Q'/>
<arg type64='Q'/>
<arg type64='Q'/>
<retval type64='{_MTLSize=QQQ}'/>
</function>
<function inline='true' name='MTLTextureSwizzleChannelsMake'>
<arg type64='C'/>
<arg type64='C'/>
<arg type64='C'/>
<arg type64='C'/>
<retval type64='{_MTLTextureSwizzleChannels=CCCC}'/>
</function>
<class name='MTLAccelerationStructureGeometryDescriptor'>
<method selector='allowDuplicateIntersectionFunctionInvocation'>
<retval type64='B'/>
</method>
<method selector='opaque'>
<retval type64='B'/>
</method>
<method selector='setAllowDuplicateIntersectionFunctionInvocation:'>
<arg index='0' type64='B'/>
</method>
<method selector='setOpaque:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='MTLArgument'>
<method selector='isActive'>
<retval type64='B'/>
</method>
<method selector='isDepthTexture'>
<retval type64='B'/>
</method>
</class>
<class name='MTLAttribute'>
<method selector='isActive'>
<retval type64='B'/>
</method>
<method selector='isPatchControlPointData'>
<retval type64='B'/>
</method>
<method selector='isPatchData'>
<retval type64='B'/>
</method>
</class>
<class name='MTLCaptureManager'>
<method selector='isCapturing'>
<retval type64='B'/>
</method>
<method selector='startCaptureWithDescriptor:error:'>
<retval type64='B'/>
</method>
<method selector='supportsDestination:'>
<retval type64='B'/>
</method>
</class>
<class name='MTLCommandBufferDescriptor'>
<method selector='retainedReferences'>
<retval type64='B'/>
</method>
<method selector='setRetainedReferences:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='MTLCompileOptions'>
<method selector='allowReferencingUndefinedSymbols'>
<retval type64='B'/>
</method>
<method selector='enableLogging'>
<retval type64='B'/>
</method>
<method selector='fastMathEnabled'>
<retval type64='B'/>
</method>
<method selector='preserveInvariance'>
<retval type64='B'/>
</method>
<method selector='setAllowReferencingUndefinedSymbols:'>
<arg index='0' type64='B'/>
</method>
<method selector='setEnableLogging:'>
<arg index='0' type64='B'/>
</method>
<method selector='setFastMathEnabled:'>
<arg index='0' type64='B'/>
</method>
<method selector='setPreserveInvariance:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='MTLComputePipelineDescriptor'>
<method selector='setSupportAddingBinaryFunctions:'>
<arg index='0' type64='B'/>
</method>
<method selector='setSupportIndirectCommandBuffers:'>
<arg index='0' type64='B'/>
</method>
<method selector='setThreadGroupSizeIsMultipleOfThreadExecutionWidth:'>
<arg index='0' type64='B'/>
</method>
<method selector='supportAddingBinaryFunctions'>
<retval type64='B'/>
</method>
<method selector='supportIndirectCommandBuffers'>
<retval type64='B'/>
</method>
<method selector='threadGroupSizeIsMultipleOfThreadExecutionWidth'>
<retval type64='B'/>
</method>
</class>
<class name='MTLDepthStencilDescriptor'>
<method selector='isDepthWriteEnabled'>
<retval type64='B'/>
</method>
<method selector='setDepthWriteEnabled:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='MTLFunctionConstant'>
<method selector='required'>
<retval type64='B'/>
</method>
</class>
<class name='MTLIndirectCommandBufferDescriptor'>
<method selector='inheritBuffers'>
<retval type64='B'/>
</method>
<method selector='inheritPipelineState'>
<retval type64='B'/>
</method>
<method selector='setInheritBuffers:'>
<arg index='0' type64='B'/>
</method>
<method selector='setInheritPipelineState:'>
<arg index='0' type64='B'/>
</method>
<method selector='setSupportDynamicAttributeStride:'>
<arg index='0' type64='B'/>
</method>
<method selector='setSupportRayTracing:'>
<arg index='0' type64='B'/>
</method>
<method selector='supportDynamicAttributeStride'>
<retval type64='B'/>
</method>
<method selector='supportRayTracing'>
<retval type64='B'/>
</method>
</class>
<class name='MTLMeshRenderPipelineDescriptor'>
<method selector='isAlphaToCoverageEnabled'>
<retval type64='B'/>
</method>
<method selector='isAlphaToOneEnabled'>
<retval type64='B'/>
</method>
<method selector='isRasterizationEnabled'>
<retval type64='B'/>
</method>
<method selector='meshThreadgroupSizeIsMultipleOfThreadExecutionWidth'>
<retval type64='B'/>
</method>
<method selector='objectThreadgroupSizeIsMultipleOfThreadExecutionWidth'>
<retval type64='B'/>
</method>
<method selector='setAlphaToCoverageEnabled:'>
<arg index='0' type64='B'/>
</method>
<method selector='setAlphaToOneEnabled:'>
<arg index='0' type64='B'/>
</method>
<method selector='setMeshThreadgroupSizeIsMultipleOfThreadExecutionWidth:'>
<arg index='0' type64='B'/>
</method>
<method selector='setObjectThreadgroupSizeIsMultipleOfThreadExecutionWidth:'>
<arg index='0' type64='B'/>
</method>
<method selector='setRasterizationEnabled:'>
<arg index='0' type64='B'/>
</method>
<method selector='setSupportIndirectCommandBuffers:'>
<arg index='0' type64='B'/>
</method>
<method selector='supportIndirectCommandBuffers'>
<retval type64='B'/>
</method>
</class>
<class name='MTLPointerType'>
<method selector='elementIsArgumentBuffer'>
<retval type64='B'/>
</method>
</class>
<class name='MTLRenderPassColorAttachmentDescriptor'>
<method selector='clearColor'>
<retval type64='{_MTLClearColor=dddd}'/>
</method>
<method selector='setClearColor:'>
<arg index='0' type64='{_MTLClearColor=dddd}'/>
</method>
</class>
<class name='MTLRenderPassDescriptor'>
<method selector='getSamplePositions:count:'>
<arg index='0' type64='^{_MTLSamplePosition=ff}'/>
</method>
<method selector='setSamplePositions:count:'>
<arg index='0' type64='^{_MTLSamplePosition=ff}'/>
</method>
</class>
<class name='MTLRenderPipelineColorAttachmentDescriptor'>
<method selector='isBlendingEnabled'>
<retval type64='B'/>
</method>
<method selector='setBlendingEnabled:'>
<arg index='0' type64='B'/>
</method>
</class>
<class name='MTLRenderPipelineDescriptor'>
<method selector='isAlphaToCoverageEnabled'>
<retval type64='B'/>
</method>
<method selector='isAlphaToOneEnabled'>
<retval type64='B'/>
</method>
<method selector='isRasterizationEnabled'>
<retval type64='B'/>
</method>
<method selector='isTessellationFactorScaleEnabled'>
<retval type64='B'/>
</method>
<method selector='setAlphaToCoverageEnabled:'>
<arg index='0' type64='B'/>
</method>
<method selector='setAlphaToOneEnabled:'>
<arg index='0' type64='B'/>
</method>
<method selector='setRasterizationEnabled:'>
<arg index='0' type64='B'/>
</method>
<method selector='setSupportAddingFragmentBinaryFunctions:'>
<arg index='0' type64='B'/>
</method>
<method selector='setSupportAddingVertexBinaryFunctions:'>
<arg index='0' type64='B'/>
</method>
<method selector='setSupportIndirectCommandBuffers:'>
<arg index='0' type64='B'/>
</method>
<method selector='setTessellationFactorScaleEnabled:'>
<arg index='0' type64='B'/>
</method>
<method selector='supportAddingFragmentBinaryFunctions'>
<retval type64='B'/>
</method>
<method selector='supportAddingVertexBinaryFunctions'>
<retval type64='B'/>
</method>
<method selector='supportIndirectCommandBuffers'>
<retval type64='B'/>
</method>
</class>
<class name='MTLSamplerDescriptor'>
<method selector='lodAverage'>
<retval type64='B'/>
</method>
<method selector='normalizedCoordinates'>
<retval type64='B'/>
</method>
<method selector='setLodAverage:'>
<arg index='0' type64='B'/>
</method>
<method selector='setNormalizedCoordinates:'>
<arg index='0' type64='B'/>
</method>
<method selector='setSupportArgumentBuffers:'>
<arg index='0' type64='B'/>
</method>
<method selector='supportArgumentBuffers'>
<retval type64='B'/>
</method>
</class>
<class name='MTLTextureDescriptor'>
<method selector='allowGPUOptimizedContents'>
<retval type64='B'/>
</method>
<method selector='setAllowGPUOptimizedContents:'>
<arg index='0' type64='B'/>
</method>
<method selector='setSwizzle:'>
<arg index='0' type64='{_MTLTextureSwizzleChannels=CCCC}'/>
</method>
<method selector='swizzle'>
<retval type64='{_MTLTextureSwizzleChannels=CCCC}'/>
</method>
<method class_method='true' selector='texture2DDescriptorWithPixelFormat:width:height:mipmapped:'>
<arg index='3' type64='B'/>
</method>
<method class_method='true' selector='textureCubeDescriptorWithPixelFormat:size:mipmapped:'>
<arg index='2' type64='B'/>
</method>
</class>
<class name='MTLTextureReferenceType'>
<method selector='isDepthTexture'>
<retval type64='B'/>
</method>
</class>
<class name='MTLTileRenderPipelineDescriptor'>
<method selector='setSupportAddingBinaryFunctions:'>
<arg index='0' type64='B'/>
</method>
<method selector='setThreadgroupSizeMatchesTileSize:'>
<arg index='0' type64='B'/>
</method>
<method selector='supportAddingBinaryFunctions'>
<retval type64='B'/>
</method>
<method selector='threadgroupSizeMatchesTileSize'>
<retval type64='B'/>
</method>
</class>
<class name='MTLVertexAttribute'>
<method selector='isActive'>
<retval type64='B'/>
</method>
<method selector='isPatchControlPointData'>
<retval type64='B'/>
</method>
<method selector='isPatchData'>
<retval type64='B'/>
</method>
</class>
<class name='NSObject'>
<method selector='accelerationStructureSizesWithDescriptor:'>
<retval type64='{_MTLAccelerationStructureSizes=QQQ}'/>
</method>
<method selector='addCompletedHandler:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='addComputePipelineFunctionsWithDescriptor:error:'>
<retval type64='B'/>
</method>
<method selector='addFunctionWithDescriptor:library:error:'>
<retval type64='B'/>
</method>
<method selector='addLibraryWithDescriptor:error:'>
<retval type64='B'/>
</method>
<method selector='addLogHandler:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='q'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='addMeshRenderPipelineFunctionsWithDescriptor:error:'>
<retval type64='B'/>
</method>
<method selector='addPresentedHandler:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='addRenderPipelineFunctionsWithDescriptor:error:'>
<retval type64='B'/>
</method>
<method selector='addScheduledHandler:'>
<arg function_pointer='true' index='0' type64='@?'>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='addTileRenderPipelineFunctionsWithDescriptor:error:'>
<retval type64='B'/>
</method>
<method selector='allowGPUOptimizedContents'>
<retval type64='B'/>
</method>
<method selector='areBarycentricCoordsSupported'>
<retval type64='B'/>
</method>
<method selector='areProgrammableSamplePositionsSupported'>
<retval type64='B'/>
</method>
<method selector='areRasterOrderGroupsSupported'>
<retval type64='B'/>
</method>
<method selector='concurrentDispatchThreadgroups:threadsPerThreadgroup:'>
<arg index='0' type64='{_MTLSize=QQQ}'/>
<arg index='1' type64='{_MTLSize=QQQ}'/>
</method>
<method selector='concurrentDispatchThreads:threadsPerThreadgroup:'>
<arg index='0' type64='{_MTLSize=QQQ}'/>
<arg index='1' type64='{_MTLSize=QQQ}'/>
</method>
<method selector='containsAllocation:'>
<retval type64='B'/>
</method>
<method selector='convertSparsePixelRegions:toTileRegions:withTileSize:alignmentMode:numRegions:'>
<arg index='0' type64='^{MTLRegion={MTLOrigin=QQQ}{MTLSize=QQQ}}'/>
<arg index='1' type64='^{MTLRegion={MTLOrigin=QQQ}{MTLSize=QQQ}}'/>
<arg index='2' type64='{_MTLSize=QQQ}'/>
</method>
<method selector='convertSparseTileRegions:toPixelRegions:withTileSize:numRegions:'>
<arg index='0' type64='^{MTLRegion={MTLOrigin=QQQ}{MTLSize=QQQ}}'/>
<arg index='1' type64='^{MTLRegion={MTLOrigin=QQQ}{MTLSize=QQQ}}'/>
<arg index='2' type64='{_MTLSize=QQQ}'/>
</method>
<method selector='copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:'>
<arg index='4' type64='{_MTLSize=QQQ}'/>
<arg index='8' type64='{_MTLOrigin=QQQ}'/>
</method>
<method selector='copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:'>
<arg index='4' type64='{_MTLSize=QQQ}'/>
<arg index='8' type64='{_MTLOrigin=QQQ}'/>
</method>
<method selector='copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:'>
<arg index='3' type64='{_MTLOrigin=QQQ}'/>
<arg index='4' type64='{_MTLSize=QQQ}'/>
</method>
<method selector='copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:'>
<arg index='3' type64='{_MTLOrigin=QQQ}'/>
<arg index='4' type64='{_MTLSize=QQQ}'/>
</method>
<method selector='copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:'>
<arg index='3' type64='{_MTLOrigin=QQQ}'/>
<arg index='4' type64='{_MTLSize=QQQ}'/>
<arg index='8' type64='{_MTLOrigin=QQQ}'/>
</method>
<method selector='dispatchThreadgroups:threadsPerThreadgroup:'>
<arg index='0' type64='{_MTLSize=QQQ}'/>
<arg index='1' type64='{_MTLSize=QQQ}'/>
</method>
<method selector='dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:'>
<arg index='2' type64='{_MTLSize=QQQ}'/>
</method>
<method selector='dispatchThreads:threadsPerThreadgroup:'>
<arg index='0' type64='{_MTLSize=QQQ}'/>
<arg index='1' type64='{_MTLSize=QQQ}'/>
</method>
<method selector='dispatchThreadsPerTile:'>
<arg index='0' type64='{_MTLSize=QQQ}'/>
</method>
<method selector='drawMeshThreadgroups:threadsPerObjectThreadgroup:threadsPerMeshThreadgroup:'>
<arg index='0' type64='{_MTLSize=QQQ}'/>
<arg index='1' type64='{_MTLSize=QQQ}'/>
<arg index='2' type64='{_MTLSize=QQQ}'/>
</method>
<method selector='drawMeshThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerObjectThreadgroup:threadsPerMeshThreadgroup:'>
<arg index='2' type64='{_MTLSize=QQQ}'/>
<arg index='3' type64='{_MTLSize=QQQ}'/>
</method>
<method selector='drawMeshThreads:threadsPerObjectThreadgroup:threadsPerMeshThreadgroup:'>
<arg index='0' type64='{_MTLSize=QQQ}'/>
<arg index='1' type64='{_MTLSize=QQQ}'/>
<arg index='2' type64='{_MTLSize=QQQ}'/>
</method>
<method selector='getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:'>
<arg index='3' type64='{MTLRegion={MTLOrigin=QQQ}{MTLSize=QQQ}}'/>
</method>
<method selector='getBytes:bytesPerRow:fromRegion:mipmapLevel:'>
<arg index='2' type64='{MTLRegion={MTLOrigin=QQQ}{MTLSize=QQQ}}'/>
</method>
<method selector='getDefaultSamplePositions:count:'>
<arg index='0' type64='^{_MTLSamplePosition=ff}'/>
</method>
<method selector='getTextureAccessCounters:region:mipLevel:slice:resetCounters:countersBuffer:countersBufferOffset:'>
<arg index='1' type64='{MTLRegion={MTLOrigin=QQQ}{MTLSize=QQQ}}'/>
<arg index='4' type64='B'/>
</method>
<method selector='hasUnifiedMemory'>
<retval type64='B'/>
</method>
<method selector='heapAccelerationStructureSizeAndAlignWithDescriptor:'>
<retval type64='{_MTLSizeAndAlign=QQ}'/>
</method>
<method selector='heapAccelerationStructureSizeAndAlignWithSize:'>
<retval type64='{_MTLSizeAndAlign=QQ}'/>
</method>
<method selector='heapBufferSizeAndAlignWithLength:options:'>
<retval type64='{_MTLSizeAndAlign=QQ}'/>
</method>
<method selector='heapTextureSizeAndAlignWithDescriptor:'>
<retval type64='{_MTLSizeAndAlign=QQ}'/>
</method>
<method selector='imageblockMemoryLengthForDimensions:'>
<arg index='0' type64='{_MTLSize=QQQ}'/>
</method>
<method selector='isAliasable'>
<retval type64='B'/>
</method>
<method selector='isArgument'>
<retval type64='B'/>
</method>
<method selector='isDepth24Stencil8PixelFormatSupported'>
<retval type64='B'/>
</method>
<method selector='isDepthTexture'>
<retval type64='B'/>
</method>
<method selector='isFramebufferOnly'>
<retval type64='B'/>
</method>
<method selector='isHeadless'>
<retval type64='B'/>
</method>
<method selector='isLowPower'>
<retval type64='B'/>
</method>
<method selector='isRemovable'>
<retval type64='B'/>
</method>
<method selector='isShareable'>
<retval type64='B'/>
</method>
<method selector='isSparse'>
<retval type64='B'/>
</method>
<method selector='isUsed'>
<retval type64='B'/>
</method>
<method selector='loadTexture:slice:level:size:sourceBytesPerRow:sourceBytesPerImage:destinationOrigin:sourceHandle:sourceHandleOffset:'>
<arg index='3' type64='{_MTLSize=QQQ}'/>
<arg index='6' type64='{_MTLOrigin=QQQ}'/>
</method>
<method selector='maxThreadsPerThreadgroup'>
<retval type64='{_MTLSize=QQQ}'/>
</method>
<method selector='moveTextureMappingsFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:'>
<arg index='3' type64='{_MTLOrigin=QQQ}'/>
<arg index='4' type64='{_MTLSize=QQQ}'/>
<arg index='8' type64='{_MTLOrigin=QQQ}'/>
</method>
<method selector='newBufferWithBytesNoCopy:length:options:deallocator:'>
<arg function_pointer='true' index='3' type64='@?'>
<arg type64='^v'/>
<arg type64='Q'/>
<retval type64='v'/>
</arg>
</method>
<method selector='newComputePipelineStateWithDescriptor:options:completionHandler:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='newComputePipelineStateWithFunction:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='newComputePipelineStateWithFunction:options:completionHandler:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='newFunctionWithDescriptor:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='newFunctionWithName:constantValues:completionHandler:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='newIntersectionFunctionWithDescriptor:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='newLibraryWithSource:options:completionHandler:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='newLibraryWithStitchedDescriptor:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='newRenderPipelineStateWithDescriptor:completionHandler:'>
<arg function_pointer='true' index='1' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='newRenderPipelineStateWithDescriptor:options:completionHandler:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='newRenderPipelineStateWithMeshDescriptor:options:completionHandler:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='newRenderPipelineStateWithTileDescriptor:options:completionHandler:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='@'/>
<arg type64='@'/>
<retval type64='v'/>
</arg>
</method>
<method selector='newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:'>
<arg index='4' type64='{_MTLTextureSwizzleChannels=CCCC}'/>
</method>
<method selector='notifyListener:atValue:block:'>
<arg function_pointer='true' index='2' type64='@?'>
<arg type64='@'/>
<arg type64='Q'/>
<retval type64='v'/>
</arg>
</method>
<method selector='replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:'>
<arg index='0' type64='{MTLRegion={MTLOrigin=QQQ}{MTLSize=QQQ}}'/>
</method>
<method selector='replaceRegion:mipmapLevel:withBytes:bytesPerRow:'>
<arg index='0' type64='{MTLRegion={MTLOrigin=QQQ}{MTLSize=QQQ}}'/>
</method>
<method selector='resetTextureAccessCounters:region:mipLevel:slice:'>
<arg index='1' type64='{MTLRegion={MTLOrigin=QQQ}{MTLSize=QQQ}}'/>
</method>
<method selector='retainedReferences'>
<retval type64='B'/>
</method>
<method selector='sampleCountersInBuffer:atSampleIndex:withBarrier:'>
<arg index='2' type64='B'/>
</method>
<method selector='serializeToURL:error:'>
<retval type64='B'/>
</method>
<method selector='setScissorRect:'>
<arg index='0' type64='{_MTLScissorRect=QQQQ}'/>
</method>
<method selector='setScissorRects:count:'>
<arg index='0' type64='^{_MTLScissorRect=QQQQ}'/>
</method>
<method selector='setShouldMaximizeConcurrentCompilation:'>
<arg index='0' type64='B'/>
</method>
<method selector='setStageInRegion:'>
<arg index='0' type64='{MTLRegion={MTLOrigin=QQQ}{MTLSize=QQQ}}'/>
</method>
<method selector='setVertexAmplificationCount:viewMappings:'>
<arg index='1' type64='^{_MTLVertexAmplificationViewMapping=II}'/>
</method>
<method selector='setViewport:'>
<arg index='0' type64='{_MTLViewport=dddddd}'/>
</method>
<method selector='setViewports:count:'>
<arg index='0' type64='^{_MTLViewport=dddddd}'/>
</method>
<method selector='shouldMaximizeConcurrentCompilation'>
<retval type64='B'/>
</method>
<method selector='sparseTileSizeWithTextureType:pixelFormat:sampleCount:'>
<retval type64='{_MTLSize=QQQ}'/>
</method>
<method selector='sparseTileSizeWithTextureType:pixelFormat:sampleCount:sparsePageSize:'>
<retval type64='{_MTLSize=QQQ}'/>
</method>
<method selector='supportIndirectCommandBuffers'>
<retval type64='B'/>
</method>
<method selector='supports32BitFloatFiltering'>
<retval type64='B'/>
</method>
<method selector='supports32BitMSAA'>
<retval type64='B'/>
</method>
<method selector='supportsBCTextureCompression'>
<retval type64='B'/>
</method>
<method selector='supportsCounterSampling:'>
<retval type64='B'/>
</method>
<method selector='supportsDynamicLibraries'>
<retval type64='B'/>
</method>
<method selector='supportsFamily:'>
<retval type64='B'/>
</method>
<method selector='supportsFeatureSet:'>
<retval type64='B'/>
</method>
<method selector='supportsFunctionPointers'>
<retval type64='B'/>
</method>
<method selector='supportsFunctionPointersFromRender'>
<retval type64='B'/>
</method>
<method selector='supportsPrimitiveMotionBlur'>
<retval type64='B'/>
</method>
<method selector='supportsPullModelInterpolation'>
<retval type64='B'/>
</method>
<method selector='supportsQueryTextureLOD'>
<retval type64='B'/>
</method>
<method selector='supportsRasterizationRateMapWithLayerCount:'>
<retval type64='B'/>
</method>
<method selector='supportsRaytracing'>
<retval type64='B'/>
</method>
<method selector='supportsRaytracingFromRender'>
<retval type64='B'/>
</method>
<method selector='supportsRenderDynamicLibraries'>
<retval type64='B'/>
</method>
<method selector='supportsShaderBarycentricCoordinates'>
<retval type64='B'/>
</method>
<method selector='supportsTextureSampleCount:'>
<retval type64='B'/>
</method>
<method selector='supportsVertexAmplificationCount:'>
<retval type64='B'/>
</method>
<method selector='swizzle'>
<retval type64='{_MTLTextureSwizzleChannels=CCCC}'/>
</method>
<method selector='threadgroupSizeMatchesTileSize'>
<retval type64='B'/>
</method>
<method selector='updateTextureMapping:mode:region:mipLevel:slice:'>
<arg index='2' type64='{MTLRegion={MTLOrigin=QQQ}{MTLSize=QQQ}}'/>
</method>
<method selector='updateTextureMappings:mode:regions:mipLevels:slices:numRegions:'>
<arg index='2' type64='^{MTLRegion={MTLOrigin=QQQ}{MTLSize=QQQ}}'/>
</method>
<method selector='waitUntilSignaledValue:timeoutMS:'>
<retval type64='B'/>
</method>
</class>
<class name='NSProcessInfo'>
<method selector='hasPerformanceProfile:'>
<retval type64='B'/>
</method>
<method selector='isDeviceCertifiedFor:'>
<retval type64='B'/>
</method>
</class>
<informal_protocol name='MTLBinaryArchive'>
<method selector='addComputePipelineFunctionsWithDescriptor:error:' type64='B32@0:8@16^@24'/>
<method selector='addFunctionWithDescriptor:library:error:' type64='B40@0:8@16@24^@32'/>
<method selector='addLibraryWithDescriptor:error:' type64='B32@0:8@16^@24'/>
<method selector='addMeshRenderPipelineFunctionsWithDescriptor:error:' type64='B32@0:8@16^@24'/>
<method selector='addRenderPipelineFunctionsWithDescriptor:error:' type64='B32@0:8@16^@24'/>
<method selector='addTileRenderPipelineFunctionsWithDescriptor:error:' type64='B32@0:8@16^@24'/>
<method selector='serializeToURL:error:' type64='B32@0:8@16^@24'/>
</informal_protocol>
<informal_protocol name='MTLBinding'>
<method selector='isArgument' type64='B16@0:8'/>
<method selector='isUsed' type64='B16@0:8'/>
</informal_protocol>
<informal_protocol name='MTLCommandBuffer'>
<method selector='retainedReferences' type64='TB,R'/>
</informal_protocol>
<informal_protocol name='MTLComputePipelineState'>
<method selector='supportIndirectCommandBuffers' type64='TB,R'/>
</informal_protocol>
<informal_protocol name='MTLDevice'>
<method selector='accelerationStructureSizesWithDescriptor:' type64='{?=QQQ}24@0:8@16'/>
<method selector='areBarycentricCoordsSupported' type64='B16@0:8'/>
<method selector='areProgrammableSamplePositionsSupported' type64='B16@0:8'/>
<method selector='areRasterOrderGroupsSupported' type64='B16@0:8'/>
<method selector='hasUnifiedMemory' type64='TB,R'/>
<method selector='heapAccelerationStructureSizeAndAlignWithDescriptor:' type64='{?=QQ}24@0:8@16'/>
<method selector='heapAccelerationStructureSizeAndAlignWithSize:' type64='{?=QQ}24@0:8Q16'/>
<method selector='heapBufferSizeAndAlignWithLength:options:' type64='{?=QQ}32@0:8Q16Q24'/>
<method selector='heapTextureSizeAndAlignWithDescriptor:' type64='{?=QQ}24@0:8@16'/>
<method selector='isDepth24Stencil8PixelFormatSupported' type64='B16@0:8'/>
<method selector='isHeadless' type64='B16@0:8'/>
<method selector='isLowPower' type64='B16@0:8'/>
<method selector='isRemovable' type64='B16@0:8'/>
<method selector='maxThreadsPerThreadgroup' type64='T{?=QQQ},R'/>
<method selector='shouldMaximizeConcurrentCompilation' type64='TB'/>
<method selector='sparseTileSizeWithTextureType:pixelFormat:sampleCount:' type64='{?=QQQ}40@0:8Q16Q24Q32'/>
<method selector='sparseTileSizeWithTextureType:pixelFormat:sampleCount:sparsePageSize:' type64='{?=QQQ}48@0:8Q16Q24Q32q40'/>
<method selector='supports32BitFloatFiltering' type64='TB,R'/>
<method selector='supports32BitMSAA' type64='TB,R'/>
<method selector='supportsBCTextureCompression' type64='TB,R'/>
<method selector='supportsCounterSampling:' type64='B24@0:8Q16'/>
<method selector='supportsDynamicLibraries' type64='TB,R'/>
<method selector='supportsFamily:' type64='B24@0:8q16'/>
<method selector='supportsFeatureSet:' type64='B24@0:8Q16'/>
<method selector='supportsFunctionPointers' type64='TB,R'/>
<method selector='supportsFunctionPointersFromRender' type64='TB,R'/>
<method selector='supportsPrimitiveMotionBlur' type64='TB,R'/>
<method selector='supportsPullModelInterpolation' type64='TB,R'/>
<method selector='supportsQueryTextureLOD' type64='TB,R'/>
<method selector='supportsRasterizationRateMapWithLayerCount:' type64='B24@0:8Q16'/>
<method selector='supportsRaytracing' type64='TB,R'/>
<method selector='supportsRaytracingFromRender' type64='TB,R'/>
<method selector='supportsRenderDynamicLibraries' type64='TB,R'/>
<method selector='supportsShaderBarycentricCoordinates' type64='TB,R'/>
<method selector='supportsTextureSampleCount:' type64='B24@0:8Q16'/>
<method selector='supportsVertexAmplificationCount:' type64='B24@0:8Q16'/>
</informal_protocol>
<informal_protocol name='MTLDynamicLibrary'>
<method selector='serializeToURL:error:' type64='B32@0:8@16^@24'/>
</informal_protocol>
<informal_protocol name='MTLRenderPipelineState'>
<method selector='supportIndirectCommandBuffers' type64='TB,R'/>
<method selector='threadgroupSizeMatchesTileSize' type64='TB,R'/>
</informal_protocol>
<informal_protocol name='MTLResidencySet'>
<method selector='containsAllocation:' type64='B24@0:8@16'/>
</informal_protocol>
<informal_protocol name='MTLResource'>
<method selector='isAliasable' type64='B16@0:8'/>
</informal_protocol>
<informal_protocol name='MTLSharedEvent'>
<method selector='waitUntilSignaledValue:timeoutMS:' type64='B32@0:8Q16Q24'/>
</informal_protocol>
<informal_protocol name='MTLTexture'>
<method selector='allowGPUOptimizedContents' type64='TB,R'/>
<method selector='isFramebufferOnly' type64='B16@0:8'/>
<method selector='isShareable' type64='B16@0:8'/>
<method selector='isSparse' type64='TB,?,R'/>
<method selector='swizzle' type64='T{?=CCCC},R,N'/>
</informal_protocol>
<informal_protocol name='MTLTextureBinding'>
<method selector='isDepthTexture' type64='B16@0:8'/>
</informal_protocol>
</signatures>
